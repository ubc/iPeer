{"version":3,"file":"SubmissionReviews.js","sources":["../../../../vue-ts-ipeer/src/components/icons/IconNewspaper.vue","../../../../vue-ts-ipeer/src/student/views/SubmissionReviews.vue"],"sourcesContent":["<template>\n  <svg id=\"emoji\" viewBox=\"0 0 72 72\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g id=\"line\">\n      <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M59,56h2.3957C63.0526,56,64,54.9933,64,53.3365v-0.3782v-42H14\"/>\n      <rect x=\"9\" y=\"16\" width=\"50\" height=\"40\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <rect x=\"14\" y=\"27.1124\" width=\"20.0043\" height=\"20.0043\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"14\" x2=\"54\" y1=\"21.9988\" y2=\"21.9988\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"39.5684\" x2=\"54\" y1=\"28.1124\" y2=\"28.1124\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"39.5684\" x2=\"54\" y1=\"34.4792\" y2=\"34.4792\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"39.5684\" x2=\"54\" y1=\"40.8459\" y2=\"40.8459\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"39.5684\" x2=\"54\" y1=\"47.2126\" y2=\"47.2126\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n    </g>\n  </svg>\n</template>","<script lang=\"ts\" setup>\nimport {ref, reactive, watch, computed, onMounted, defineAsyncComponent} from 'vue';\n\nimport SectionTitle from '@/components/SectionTitle.vue'\nimport SectionSubtitle from '@/components/SectionSubtitle.vue'\nimport { IconNewspaper } from '@/components/icons'\n\nimport type {IEvaluation, IUser} from '@/types/typings'\ninterface Props {\n  evaluation: IEvaluation\n  currentUser: IUser\n  disabled?: boolean\n}\n// REFERENCES\nconst emit = defineEmits<{\n  // (e: 'updateModelValue', option: string): void\n}>()\nconst props = defineProps<Props>()\n\n// DATA\n\n// COMPUTED\nconst template = computed(() => {\n//   if(evaluation.value?.template) {\n//     return defineAsyncComponent({\n//       loader: () => import(`@/student/views/templates/${evaluation.value?.template}.vue`),\n//       loadingComponent: `<div class=\"w-full h-128 bg-gold-100\">L O A D I N G...</div>`\n//     })\n//   }\n})\n// METHODS\n\n// WATCH\n\n// LIFECYCLE\n\n</script>\n\n<template>\n  <SectionTitle title=\"Reviews of You\" />\n  <SectionSubtitle subtitle=\"Read your group's evaluation of you\" :icon=\"{src: IconNewspaper, size: '3.75rem'}\" />\n\n  <component\n      :is=\"template\"\n      :members=\"props.members\"\n      :evaluation=\"props.evaluation\"\n      :current-user=\"props.currentUser\"\n      :disabled=\"props.disabled\"\n      @fetch:evaluation=\"$emit('fetch:evaluation')\"\n  ></component>\n</template>\n\n<style lang=\"scss\" scoped>\n\n</style>\n"],"names":["_hoisted_1","_hoisted_3","_sfc_render","_ctx","_cache","template","computed"],"mappings":"sQACUA,EAAO,CAAC,GAAA,QAAoB,QAAkC,m9CAUhEC,EAAA,IAVN,SAAAC,EAAAC,EAAAC,EAAA,kLCqBIC,EAAWC,EAAS,IAAM,CAAA,CAO/B"}