{"version":3,"file":"SelfMixedLikertQuestion.js","sources":["../../../../vue-ts-ipeer/src/student/views/questions/SelfMixedLikertQuestion.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { ref, toRef } from 'vue'\nimport { validateLikert } from '@/helpers/rules'\nimport { CustomHiddenField, CustomRadioField } from '@/components/fields'\nimport type { Evaluation, User } from '@/types/typings'\nimport {find, isEmpty} from \"lodash\";\n// REFERENCES\nconst emit = defineEmits<{\n  (e: 'update:initialState', value: object): void\n}>()\nconst props = defineProps<{\n  evaluation: Evaluation,\n  question: object,\n  currentUser: User,\n  initialState: object,\n}>()\n// DATA\nconst question      = toRef(props, 'question')\nconst currentUser   = toRef(props, 'currentUser')\nconst initialState  = toRef(props, 'initialState')\n// COMPUTED\n// METHODS\nfunction gradeRoundUp(num: number, precision: number) {\n  precision = Math.pow(10, precision)\n  return Math.floor(num * precision) / precision\n}\nfunction getResponseDetails(member_id:string, question_num:string): string|number {\n  if(initialState.value?.data || !isEmpty(initialState.value?.data)) {\n    const response = find(initialState.value?.data, { evaluatee: member_id })\n    if(response?.details) {\n      const question = find(response.details, { question_number: question_num })\n      return question?.selected_lom\n    }\n  }\n  return 0\n}\n// WATCH\n// LIFECYCLE\n</script>\n\n<template>\n  <div :class=\"`question_${question?.question_num} mx-4`\">\n    <div class=\"question\">{{ question?.question_num }}. {{ question?.title }} <span class=\"text-red-500\" v-if=\"question?.required\">*</span></div>\n    <div class=\"description text-sm text-slate-900 leading-relaxed mx-4 mb-2\">{{ question?.instructions }}</div>\n    <div class=\"mx-4\">\n      <table class=\"standardtable leftalignedtable\">\n        <thead>\n        <tr>\n          <th :style=\"'width: '+ 100/question?.loms?.length +'%; text-align: center'\" v-for=\"(lom) of question?.loms\" :key=\"lom.id\">\n            <div class=\"text-center leading-4\">\n              <div class=\"font-normal\">{{ lom.descriptor }}</div>\n              <div class=\"text-sm font-thin\" v-if=\"parseInt(question?.show_marks)\">mark</div>\n            </div>\n          </th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n          <CustomHiddenField\n              :name=\"'data['+currentUser.id+'][EvaluationMixeval]['+question.question_num+'][selected_lom]'\"\n              :value=\"getResponseDetails(currentUser.id, question.question_num)\" />\n          <td style=\"text-align: center; height: 36px;\" v-for=\"(lom) of question.loms\" :key=\"lom.id\">\n            <CustomRadioField\n              :name=\"'data['+currentUser.id+'][EvaluationMixeval]['+question.question_num+'][grade]'\"\n              :value=\"lom.scale_level\"\n              :rules=\"question.required ? validateLikert : null\"\n              :checked=\"getResponseDetails(currentUser.id, question.question_num)\"\n              @change=\"$emit('update:initialState', {\n                member_id: currentUser.id,\n                question_num: question.question_num,\n                event: {\n                  key: 'selected_lom',\n                  value: $event.target.value\n                }\n              })\"\n            />\n            <!-- TBD:: Check if the grade conversion (to percentages) will be handled on the server\n            <CustomRadioField\n              :value=\"gradeRoundUp(parseInt(question?.multiplier) / (question?.loms.length - parseInt(evaluation?.review?.zero_mark)) * parseInt(lom?.scale_level), 1)\"\n            />-->\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n"],"names":["question","toRef","props","currentUser","initialState","getResponseDetails","member_id","question_num","_a","isEmpty","_b","response","find","_c"],"mappings":"+4BAiBMA,EAAgBC,EAAMC,EAAO,UAAU,EACvCC,EAAgBF,EAAMC,EAAO,aAAa,EAC1CE,EAAgBH,EAAMC,EAAO,cAAc,EAOxC,SAAAG,EAAmBC,EAAkBC,EAAoC,WAC7E,KAAAC,EAAAJ,EAAa,QAAb,YAAAI,EAAoB,OAAQ,CAACC,mBAAQC,EAAAN,EAAa,QAAb,YAAAM,EAAoB,IAAI,EAAG,CAC3D,MAAAC,EAAWC,gBAAKC,EAAAT,EAAa,QAAb,YAAAS,EAAoB,KAAM,CAAE,UAAWP,EAAW,EACxE,GAAGK,GAAA,MAAAA,EAAU,QAAS,CACpB,MAAMX,EAAWY,EAAAA,QAAAA,KAAKD,EAAS,QAAS,CAAE,gBAAiBJ,EAAc,EACzE,OAAOP,GAAAA,YAAAA,EAAU,YACnB,CACF,CACO,MAAA,EACT;;;"}