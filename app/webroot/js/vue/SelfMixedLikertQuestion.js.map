{"version":3,"file":"SelfMixedLikertQuestion.js","sources":["../../../../vue-ts-ipeer/src/student/views/questions/SelfMixedLikertQuestion.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { ref, toRef, reactive, watch, computed, onMounted } from 'vue'\nimport { validateLikert } from '@/helpers/rules'\nimport CustomVeeField from '@/components/fields/CustomVeeField.vue'\n\nimport { InputText, InputRadio } from '@/components/fields'\n\n// REFERENCES\nconst emit = defineEmits<{\n  (e: 'update:form', value: object): void\n}>()\nconst props = defineProps<{\n  question: object,\n  currentUser: object,\n  initialState: object,\n}>()\n\n// DATA\nconst question = toRef(props, 'question')\nconst currentUser = toRef(props, 'currentUser')\nconst initialState = toRef(props, 'initialState')\nconst errorMessage = ref(true)\n// COMPUTED\n\n// METHODS\nfunction gradeRoundUp(num, precision) {\n  precision = Math.pow(10, precision)\n  return Math.floor(num * precision) / precision\n}\n\nfunction setSelectedLom(value, member_id, question_num) {\n  emit('update:form', {[`selected_lom_${member_id}_${question_num}`]: value})\n}\n// WATCH\n\n// LIFECYCLE\n\n</script>\n\n<template>\n  <div :class=\"`question_${question.question_num} mx-4`\">\n    <div class=\"question\">{{ question.question_num }}. {{ question.title }} <span class=\"text-red-500\" v-if=\"question.required\">*</span></div>\n    <div class=\"description text-sm text-slate-900 leading-relaxed mx-4 mb-2\">{{ question.instructions }}</div>\n    <div class=\"mx-4\">\n      <table class=\"standardtable leftalignedtable\">\n        <thead>\n        <tr>\n          <th :style=\"'width: '+ 100/question.loms.length +'%; text-align: center'\"\n              v-for=\"(lom, lomIdx) of question.loms\" :key=\"lom.id\">\n            <div class=\"font-normal\">{{ lom.descriptor }}</div>\n            <!--<small v-if=\"parseInt(question.show_marks)\" class=\"text-sm font-light\">\n              ({{ gradeRoundUp((question.multiplier/question.scale_level)*lom.scale_level, 1) }} mark{{ gradeRoundUp((question.multiplier/question.scale_level)*lom.scale_level, 1) > 1 ? 's' : '' }})\n            </small>-->\n          </th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n          <td style=\"text-align: center\" v-for=\"(lom, lomIdx) of question.loms\" :key=\"lom.id\" :class=\"{ 'has-error': !!errorMessage }\">\n            <CustomVeeField @update.message=\"errorMessage === message\"\n                as=\"input\"\n                type=\"radio\"\n                :name=\"`data[${currentUser.id}][EvaluationMixeval][${question.question_num}][grade]`\"\n                :rules=\"validateLikert\"\n            />\n            <!--\n            <InputRadio class=\"flex py-2\"\n                        :name=\"'data['+currentUser.id+'][EvaluationMixeval]['+question.question_num+'][grade]'\"\n                        :value=\"gradeRoundUp((question.multiplier/question.scale_level)*lom.scale_level, 1)\"\n                        @change=\"setSelectedLom(lom.scale_level, currentUser.id, question.question_num)\"\n            />{{ selected_lom }}\n            <InputText type=\"hidden\"\n                       :name=\"'data['+currentUser.id+'][EvaluationMixeval]['+question.question_num+'][selected_lom]'\"\n            />-->\n            <!--  :checked=\"initialState['selected_lom_'+member.id+'_'+question.question_num] === lom.scale_level\"  -->\n            <!--<input\n                type=\"radio\"\n                :name=\"'data['+member.id+'][EvaluationMixeval]['+question.question_num+'][grade]'\"\n                :value=\"gradeRoundUp((question.multiplier/question.scale_level)*lom.scale_level, 1)\"\n                :checked=\"form['selected_lom_'+member.id+'_'+question.question_num] === lom.scale_level\"\n                @change=\"setSelectedLom(lom.scale_level, member.id, question.question_num)\"\n            />-->\n          </td>\n          <HiddenField :name=\"'data['+currentUser.id+'][EvaluationMixeval]['+question.question_num+'][selected_lom]'\" />\n          <!--   :value=\"initialState['selected_lom_'+member.id+'_'+question.question_num]??''\"  -->\n          <!--<input\n              type=\"hidden\"\n              :name=\"'data['+member.id+'][EvaluationMixeval]['+question.question_num+'][selected_lom]'\"\n              :value=\"form['selected_lom_'+member.id+'_'+question.question_num]??''\"\n          >-->\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n"],"names":["question","toRef","props","currentUser","errorMessage","ref"],"mappings":"ovBAkBMA,EAAWC,EAAMC,EAAO,UAAU,EAClCC,EAAcF,EAAMC,EAAO,aAAa,EACzBD,EAAMC,EAAO,cAAc,EAC1C,MAAAE,EAAeC,EAAI,EAAI;;;;;;;;;;;;;;;;;;;;"}