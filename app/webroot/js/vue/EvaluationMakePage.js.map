{"version":3,"mappings":"grBAkBcA,EAAS,EACvB,MAAMC,EAASC,IAGTC,EAAWC,EAAS,IAAM,OAC3B,QAAM,aAAN,QAAkB,SACnB,OAAOC,EAAqB,CAC1B,OAAQ,WAAM,k3CACd,iBAAkB,+DACnB,CACH,CACD,EAID,SAAU,IAAM,SACXC,IAAM,aAAN,cAAkB,UAAW,IAC9BL,EAAO,KAAK,CAAE,KAAM,iBAAmB,GAEvCA,EAAO,KAAK,CAAE,KAAM,iBAAmB,EACzC,CACD","names":["useRoute","router","useRouter","template","computed","defineAsyncComponent","_a"],"sources":["../../../../vue-ts-ipeer/src/student/views/EvaluationMakePage.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport {ref, reactive, watch, computed, onMounted, defineAsyncComponent} from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\nimport TakeNote from '@/student/components/TakeNote.vue'\nimport IconSpinner from '@/components/icons/IconSpinner.vue'\n\nimport type { Evaluation, User, EvaluationReviewResponse } from '@/types/typings'\n\n// REFERENCES\nconst emit = defineEmits<{\n  // (e: 'update:modelValue', option: object): void\n  (e: 'fetch:evaluation'): void\n}>()\nconst props = defineProps<{\n  currentUser: User\n  evaluation: Evaluation\n}>()\nconst route = useRoute()\nconst router = useRouter()\n// DATA\n// COMPUTED\nconst template = computed(() => {\n  if(props.evaluation?.template) {\n    return defineAsyncComponent({\n      loader: () => import(`@/student/views/templates/${props.evaluation?.template}.vue`),\n      loadingComponent: `<div class=\"w-full h-128 bg-gold-100\">L O A D I N G...</div>`\n    })\n  }\n})\n// METHODS\n// WATCH\n// LIFECYCLE\nonMounted(() => {\n  if(props.evaluation?.status === '1') {\n    router.push({ name: 'evaluation.edit' })\n  } else {\n    router.push({ name: 'evaluation.make' })\n  }\n})\n</script>\n\n<template>\n  <div class=\"evaluation-make-page\">\n    <component\n      :is=\"template\"\n      :evaluation=\"props.evaluation\"\n      :currentUser=\"props.currentUser\"\n      @fetch:evaluation=\"$emit('fetch:evaluation')\"\n    >\n      <template v-slot:header></template>\n      <template v-slot:main></template>\n      <template v-slot:footer><TakeNote /></template>\n      <template v-slot:cta=\"{ onSave, isSubmitting }\">\n        <div class=\"cta\">\n          <button type=\"button\" class=\"button default flex items-center\" @click=\"onSave\">\n            <IconSpinner v-if=\"isSubmitting\" /> <span>Save Draft</span>\n          </button>\n          <button type=\"submit\" class=\"button submit flex items-center\">\n            <!--<IconSpinner v-if=\"meta.touched && isSubmitting\" />-->\n            <span>Submit Peer Review</span>\n          </button>\n        </div>\n      </template>\n    </component>\n  </div>\n</template>\n"],"file":"js/vue/EvaluationMakePage.js"}