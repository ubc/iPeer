{"version":3,"file":"TextArea.js","sources":["../../../../vue-ts-ipeer/src/components/fields/TextArea.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { ref, toRef, computed, onMounted, onBeforeUnmount } from 'vue'\nimport autosize from 'autosize'\nimport { useField } from 'vee-validate'\n\nimport type { FieldContext } from 'vee-validate'\n\n// REFERENCES\nconst emit = defineEmits<{\n  (e: 'update:modelValue', option: string): void\n}>()\nconst props = defineProps<{\n  memberIdx?: number\n  id?: string\n  label?: string\n  name: string\n  value: string\n  rules?: string\n  disabled?: boolean | false\n}>()\nconst name = toRef(props, 'name');\nconst { value: inputValue, handleChange, errorMessage, handleBlur, meta } = useField(name, props.rules, {\n  initialValue: props.value,\n  validateOnValueUpdate: true\n});\n\n// DATA\nconst elementRef = ref()\nconst validationListeners = {\n  blur: handleChange,\n  change: handleChange,\n  input: (e: unknown) => handleChange(e, !!errorMessage.value)\n}\n// COMPUTED\n// METHODS\n\n// const eagerValidation = function (field: FieldContext) {\n//   if (!field.errorMessage.value) {\n//     return {\n//       blur: field.handleChange,\n//       change: field.handleChange,\n//       input: (event: Event) => field.handleChange(event, false),\n//     }\n//   }\n\n//   return {\n//     blur: field.handleChange,\n//     change: field.handleChange,\n//     input: field.handleChange\n//   }\n// }\n// handleChange(props.value);\n// WATCH\n// LIFECYCLE\nonMounted(() => autosize(elementRef.value))\nonBeforeUnmount(() => autosize.destroy(elementRef.value))\n</script>\n\n<template>\n  <div class=\"form--group\" :class=\"{ 'has-error': !!errorMessage, success: meta.valid }\">\n    <label class=\"form-label\" v-if=\"props.label\" :for=\"props.id\">{{ props.label }}</label>\n    <div class=\"form-control flex flex-col\">\n      <textarea ref=\"elementRef\"\n          :id=\"props.id\"\n          class=\"form-field\"\n          :name=\"name\"\n          :value=\"inputValue\"\n          :disabled=\"disabled\"\n          @input=\"handleChange\"\n          @blur=\"handleBlur\"\n          v-on=\"validationListeners\"\n      ></textarea>\n      <span class=\"form-text form-text-inline text-muted\" v-if=\"errorMessage || meta.valid\">{{ errorMessage }}</span>\n    </div>\n  </div>\n</template>\n"],"names":["name","toRef","props","inputValue","handleChange","errorMessage","handleBlur","meta","useField","elementRef","ref","validationListeners","e","onMounted","autosize","onBeforeUnmount"],"mappings":"kqBAoBMA,EAAOC,EAAMC,EAAO,MAAM,EAC1B,CAAE,MAAOC,EAAY,aAAAC,EAAc,aAAAC,EAAc,WAAAC,EAAY,KAAAC,CAAA,EAASC,EAASR,EAAME,EAAM,MAAO,CACtG,aAAcA,EAAM,MACpB,sBAAuB,EAAA,CACxB,EAGKO,EAAaC,IACbC,EAAsB,CAC1B,KAAMP,EACN,OAAQA,EACR,MAAQQ,GAAeR,EAAaQ,EAAG,CAAC,CAACP,EAAa,KAAK,CAAA,EAuB7D,OAAAQ,EAAU,IAAMC,EAASL,EAAW,KAAK,CAAC,EAC1CM,EAAgB,IAAMD,EAAS,QAAQL,EAAW,KAAK,CAAC"}