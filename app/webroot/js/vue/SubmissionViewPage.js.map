{"version":3,"mappings":"o5BAkBMA,EAAQC,IAERC,EAAcC,GAAIC,IAAM,SAAN,cAAc,QAAQ,EACxCC,EAAcF,GAAIG,IAAM,SAAN,cAAc,QAAQ,EACxCC,EAAcJ,EAAI,UAAU,EAE5BK,EAAWC,EAAS,IAAM,CAC9B,GAAGF,EAAW,MACZ,OAAOG,EAAqB,CAC1B,OAAQ,IAAMC,2sBACd,iBAAkB,+DACnB,CACH,CACD,EACKC,EAAaH,EAAS,IAAM,CAC7B,KAAM,OAAS,kBACT,QACT,CACD","names":["route","useRoute","event_id","ref","_a","group_id","_b","currentTab","template","computed","defineAsyncComponent","__variableDynamicImportRuntimeHelper","isDisabled"],"sources":["../../../../vue-ts-ipeer/src/student/views/SubmissionViewPage.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { ref, computed, defineAsyncComponent} from 'vue'\nimport { useRoute } from 'vue-router'\n\nimport SubmissionResponse from \"@/student/views/SubmissionResponse.vue\";\nimport SubmissionReviews from \"@/student/views/SubmissionReviews.vue\";\n\nimport type {IUser, IEvaluation, ISimpleReview, IRubricReview, IMixedReview} from '@/types/typings'\n// REFERENCES\nconst emit = defineEmits<{\n  // (e: 'updateModelValue', option: string): void\n}>()\nconst props = defineProps<{\n  currentUser: IUser\n  members: IUser[]\n  evaluation: IEvaluation\n  reviews: ISimpleReview|IRubricReview|IMixedReview\n}>()\nconst route = useRoute()\n// DATA\nconst event_id    = ref(route.params?.event_id)\nconst group_id    = ref(route.params?.group_id)\nconst currentTab  = ref('Response')\n// COMPUTED\nconst template = computed(() => {\n  if(currentTab.value) {\n    return defineAsyncComponent({\n      loader: () => import(`@/student/views/Submission${currentTab.value}.vue`),\n      loadingComponent: `<div class=\"w-full h-128 bg-gold-100\">L O A D I N G...</div>`\n    })\n  }\n})\nconst isDisabled = computed(() => {\n  if(route.name === 'submission.view') {\n    return true\n  }\n})\n// METHODS\n// WATCH\n// LIFECYCLE\n</script>\n\n<template>\n  <section class=\"submission-page mb-16\">\n    <ul class=\"nav nav-tabs\" id=\"submissions\" role=\"tabs\">\n      <li class=\"nav-item\" role=\"presentation\">\n        <div\n            :class=\"`nav-link ${currentTab==='Response'?'active':''}`\"\n            :id=\"`${currentTab.toLowerCase()}-tab`\"\n            role=\"tab\"\n            :aria-selected=\"`${currentTab==='Response'}`\"\n            @click=\"currentTab='Response'\">See My Response</div>\n      </li>\n      <li class=\"nav-item\" role=\"presentation\">\n        <div\n            :class=\"`nav-link ${currentTab==='Reviews'?'active':''}`\"\n            :id=\"`${currentTab.toLowerCase()}-tab`\"\n            role=\"tab\"\n            :aria-selected=\"`${currentTab==='Reviews'}`\"\n            @click=\"currentTab='Reviews'\">See Reviews of Me</div>\n      </li>\n    </ul>\n    <div class=\"tab-content\" id=\"tabs\">\n      <component\n          :is=\"template\"\n          :members=\"props.members\"\n          :evaluation=\"props.evaluation\"\n          :current-user=\"props.currentUser\"\n          :disabled=\"isDisabled\"\n          @fetch:evaluation=\"$emit('fetch:evaluation')\"\n      ></component>\n    </div>\n\n    <div class=\"cta\">\n      <router-link :to=\"{ name: 'dashboard' }\" class=\"button default with-icon\" >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-4 h-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.75 19.5L8.25 12l7.5-7.5\" />\n        </svg>\n        <span>Back</span>\n      </router-link>\n\n      <router-link\n          v-if=\"currentTab==='Response'\"\n          :to=\"{ name: 'evaluation.edit', params: { event_id: event_id, group_id: group_id } }\"\n          class=\"button submit flex items-center\"\n      ><span>{{ 'Edit My Response' }}</span>\n      </router-link>\n    </div>\n\n  </section>\n</template>\n"],"file":"js/vue/SubmissionViewPage.js"}