import{d as h,s as k,x as q,j as f,l as B,y as C,o as i,c as p,t as V,g as c,a as v,z as _,A as S,q as e,m as F,E as j,_ as E}from"./main.js";import{d as y}from"./autosize.esm.js";const M={class:"form-group my-2"},R={key:0,class:"form-label"},T={class:"form-control"},U=["id","name","value","disabled"],z=h({__name:"CustomTextField",props:{label:{type:String,required:!1},name:{type:String,required:!0},value:{type:null,required:!1},modelValue:{type:null,required:!1},rules:{type:[String,Object],required:!1,default:void 0},default:{type:String,required:!1},disabled:{type:Boolean,required:!1,default:!1}},emits:["update:modelValue","update:event"],setup(r,{emit:N}){const a=r,o=k(a,"name"),{value:g,handleChange:s,errorMessage:d,handleBlur:m,meta:b}=q(o,a.rules,{type:"textarea",initialValue:a.value,validateOnValueUpdate:!1}),u=f();f(a.default);const x={blur:s,change:s,input:n=>s(n,!!d.value)};return B(()=>y(u.value)),C(()=>y.destroy(u.value)),(n,t)=>(i(),p("div",M,[r.label?(i(),p("label",R,V(r.label),1)):c("v-if",!0),v("div",T,[v("textarea",_({class:["form-textarea",{"has-error":!!e(d),success:e(b).valid}],ref_key:"elementRef",ref:u,style:{resize:"none",clear:"right",padding:"0.3em 0.5em"},id:e(o),name:e(o),value:e(g),disabled:r.disabled,onChange:t[0]||(t[0]=l=>n.$emit("update:event",l)),onInput:t[1]||(t[1]=(...l)=>e(s)&&e(s)(...l)),onBlur:t[2]||(t[2]=(...l)=>e(m)&&e(m)(...l))},S(x,!0),n.$attrs),null,16,U),a.type!=="radio"?(i(),F(e(j),{key:0,class:"form-text text-muted",name:e(o)},null,8,["name"])):c("v-if",!0)])]))}}),$=E(z,[["__file","/Users/josephkh/Workspace/iPeer/app/webroot/vue-ts-ipeer/src/components/fields/CustomTextField.vue"]]);export{$ as C};
//# sourceMappingURL=CustomTextField.js.map
