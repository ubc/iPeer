{"version":3,"mappings":"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","names":["_hoisted_1","_createElementVNode","_hoisted_3","sort","reactive","key","column","direction","emit","Row","defineAsyncComponent","loading","ref","error","columns","entries","filteredEntries","computed","isEmpty","newEntries","compareEntries","emitSortBy","event","useFetch","eventsResponse","err","toRef","defaultValue","props","selected","handleChange","filter","filterEntries","paginateEntries","paginate","options","unique","a","b","_a","updateData","dataValue","targetKey","name","checked","index","value","onMounted"],"sources":["../../../../vue-ts-ipeer/src/components/icons/IconCheckedBox.vue","../../../../vue-ts-ipeer/src/components/icons/IconNotepad.vue","../../../../vue-ts-ipeer/src/components/icons/IconLeftArrow.vue","../../../../vue-ts-ipeer/src/components/icons/IconRightArrow.vue","../../../../vue-ts-ipeer/src/student/components/tables/datatable/Table.vue","../../../../vue-ts-ipeer/src/student/components/tables/CurrentWork.vue","../../../../vue-ts-ipeer/src/components/Pagination.vue","../../../../vue-ts-ipeer/src/components/fields/SelectField.vue","../../../../vue-ts-ipeer/src/student/components/tables/CompletedWork.vue","../../../../vue-ts-ipeer/src/pages/EventsIndex.vue"],"sourcesContent":["<template>\n  <svg id=\"emoji\" viewBox=\"0 0 72 72\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g id=\"line\">\n      <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M51.2308,14.778c-15.2308,18-18,30.4615-18,30.4615s-2.7692-6.9231-5.5385-9.6923\"/>\n      <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M45,29.0772V50.318c0,0.2541-0.2059,0.46-0.46,0.46H22.46c-0.254,0-0.46-0.2059-0.46-0.46v-22.08c0-0.254,0.2059-0.46,0.46-0.46 h13.9961h0.3953\"/>\n    </g>\n  </svg>\n</template>","<template>\n  <svg id=\"emoji\" viewBox=\"0 0 72 72\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g id=\"line\">\n      <line x1=\"45.4806\" x2=\"45.4806\" y1=\"13.9548\" y2=\"19.5906\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"40.7203\" x2=\"40.7203\" y1=\"13.9548\" y2=\"19.5906\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"35.96\" x2=\"35.96\" y1=\"13.9548\" y2=\"19.5906\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"50.2408\" x2=\"50.2408\" y1=\"13.9548\" y2=\"19.5906\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"31.1997\" x2=\"31.1997\" y1=\"13.9548\" y2=\"19.5906\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"26.4394\" x2=\"26.4394\" y1=\"13.9548\" y2=\"19.5906\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"21.6792\" x2=\"21.6792\" y1=\"13.9548\" y2=\"19.5906\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"16.9896\" x2=\"54.7874\" y1=\"29.3515\" y2=\"29.3515\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"16.9896\" x2=\"54.7874\" y1=\"39.8249\" y2=\"39.8249\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"16.9896\" x2=\"39.115\" y1=\"50.2984\" y2=\"50.2984\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"25.9463\" x2=\"25.9463\" y1=\"24.4434\" y2=\"55.5488\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <polyline fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" points=\"54.3253,16.9734 59.96,16.9734 59.997,48.0382 43.6564,60.0864 11.997,60.0918 11.96,16.9734 17.5992,16.9734\"/>\n      <polyline fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" points=\"59.7462,48.0382 43.1384,48.0382 43.1384,53.5175\"/>\n    </g>\n  </svg>\n</template>","<template>\n  <svg id=\"emoji\" viewBox=\"0 0 72 72\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g id=\"line\">\n      <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M41,55l-18.7948-9.1111l-15.817-7.6675c-1.8509-0.8972-1.8509-3.5456,0-4.4428l15.817-7.6675L41,17\"/>\n      <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M67,55l-18.8824-9.1111l-15.8908-7.6675c-1.8595-0.8972-1.8595-3.5456,0-4.4428l15.8908-7.6675L67,17\"/>\n    </g>\n  </svg>\n</template>","<template>\n  <svg id=\"emoji\" viewBox=\"0 0 72 72\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g id=\"line\">\n      <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M31,17l18.7948,9.1111l15.817,7.6675c1.8509,0.8972,1.8509,3.5456,0,4.4428l-15.817,7.6675L31,55\"/>\n      <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M5,17l18.8824,9.1111l15.8908,7.6675c1.8595,0.8972,1.8595,3.5456,0,4.4428L23.8824,45.889L5,55\"/>\n    </g>\n  </svg>\n</template>","<script lang=\"ts\" setup>\nimport { reactive } from 'vue';\n// REFERENCES\nconst emit = defineEmits<{\n  (e: 'update:sort', option: object): void\n}>()\nconst props = defineProps<{\n  columns: object[]\n}>()\n// DATA\nconst sort = reactive({\n  key: 'event',\n  column: 'id',\n  direction: 'asc'\n})\n// COMPUTED\n// METHODS\nfunction handleSortBy(key: string, column: string, direction: string) {\n  sort.key = key\n  sort.column = column\n  sort.direction = direction\n  emit('update:sort', sort)\n}\n// WATCH\n// LIFECYCLE\n</script>\n\n<template>\n  <table class=\"standardtable leftalignedtable\">\n    <thead>\n    <tr>\n      <th v-for=\"(column, index) of columns\" :key=\"column.id\" :data-index=\"index\" :style=\"{width: column.width}\">\n        <div class=\"flex justify-between items-center space-x-4\">\n          <span>{{ column.name }}</span>\n          <svg class=\"w-5 h-5 cursor-pointer text-slate-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"\n               @click=\"handleSortBy(column.key, column.value, sort.direction === 'asc' ? 'desc' : 'asc')\">\n            <path v-if=\"column.sortable && sort.column !== column.value\"\n                  stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l4-4 4 4m0 6l-4 4-4-4\"></path>\n            <path v-else-if=\"column.sortable && sort.direction === 'desc' && sort.key === column.key\"\n                  stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 4h13M3 8h9m-9 4h6m4 0l4-4m0 0l4 4m-4-4v12\"></path>\n            <path v-else-if=\"column.sortable && sort.direction === 'asc' && sort.key === column.key\"\n                  stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 4h13M3 8h9m-9 4h9m5-4v12m0 0l-4-4m4 4l4-4\"></path>\n          </svg>\n        </div>\n      </th>\n    </tr>\n    </thead>\n    <tbody><slot /></tbody>\n  </table>\n</template>\n","<script lang=\"ts\" setup>\nimport { ref, reactive, computed, onMounted, defineAsyncComponent } from 'vue'\nimport { isEmpty } from 'lodash'\nimport useFetch from '@/composables/useFetch'\nimport { compareEntries } from '@/helpers'\nimport { Table } from '@/student/components/tables/datatable'\nimport Loader from \"@/components/Loader.vue\";\nimport Error from '@/components/Error.vue'\nimport type { User, Event, Course, Group, Penalty } from '@/types/typings'\ninterface IEventProps {\n  event: Event\n  course: Course\n  group: Group\n  penalties: Penalty[]\n  late: boolean\n  percent_penalty: string\n}\ninterface ICurrentWork {\n  current: IEventProps[]\n}\ninterface ICompletedWork {\n  completed: IEventProps[]\n}\ninterface IData {\n  current: ICurrentWork\n  completed: ICompletedWork\n}\ninterface IHttpResponse {\n  data: IData\n}\nconst Row = defineAsyncComponent({\n  loader: () => import('@/student/components/tables/current/Row.vue'),\n  LoadingComponent: 'Loading...',\n  suspensible: false,\n  delay: 2000\n})\n// REFERENCES\nconst emit = defineEmits<{\n  // (e: 'updateModelValue', option: string): void\n}>()\nconst props = defineProps<{\n  currentUser: User\n}>()\n// DATA\nconst loading = ref<boolean>(false)\nconst error   = ref<object | null>(null)\nconst columns = reactive<object[]>([\n  {id: 1, key: 'event', value: 'title', name: 'Work', sortable: true, width: '30%'},\n  {id: 2, key: 'course', value: 'course', name: 'Course', sortable: true, width: '23%'},\n  {id: 3, key: 'event', value: 'due_date', name: 'Due', sortable: true, width: '30%'},\n  {id: 4, key: 'action', value: '', name: 'Action', sortable: false, width: '17%'},\n])\nconst entries = ref<object[]>([])\nconst sort = reactive({\n  key: 'event',\n  column: 'id',\n  direction: 'asc'\n})\n// COMPUTED\nconst filteredEntries = computed(() => {\n  let newEntries = entries.value || []\n  if(!isEmpty(newEntries) && Array.isArray(newEntries)) { // newEntries instanceof Array\n    newEntries = newEntries?.sort(compareEntries(sort.key, sort.column, sort.direction))\n  }\n  return newEntries\n})\n// METHODS\nfunction emitSortBy(event) {\n  Object.assign(sort, event)\n}\n// WATCH\n// LIFECYCLE\nonMounted(async () => {\n  try {\n    loading.value = true\n    const eventsResponse: Promise<IHttpResponse | any> = await useFetch('/home?work=current', {method: 'GET', timeout: 300})\n    entries.value = eventsResponse.data\n  } catch (err: Error | any) {\n    error.value = {text: err.message, type: 'error'};\n  } finally {\n    loading.value = false\n  }\n})\n</script>\n\n<template>\n  <div class=\"current-work mx-4 my-8\">\n    <Error v-if=\"error\" class=\"current error\" :error=\"error\" />\n    <Table :error=\"error\" :columns=\"columns\" @update:sort=\"emitSortBy\">\n      <tr v-if=\"loading\">\n        <td :colspan=\"columns.length\"><Loader height=\"200px\" /></td>\n      </tr>\n      <tr v-else-if=\"!loading && isEmpty(filteredEntries)\">\n        <td :colspan=\"columns.length\"><div class=\"flex justify-center items-center p-8\">No Content found!</div></td>\n      </tr>\n      <template v-else-if=\"!loading && !isEmpty(filteredEntries)\">\n        <Row v-for=\"(row, index) of filteredEntries\" :key=\"`${index}_${row?.event?.id}`\" :data-index=\"index\" :row=\"row\" />\n      </template>\n    </Table>\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport { toRef } from 'vue';\nimport { IconLeftArrow, IconRightArrow } from '@/components/icons'\n// REFERENCES\nconst emit = defineEmits<{\n  (e: 'update:paginate', option: object): void\n}>()\nconst props = defineProps<{\n  paginate: object\n}>()\n// DATA\nconst paginate = toRef(props, 'paginate')\n// COMPUTED\n// METHODS\n// WATCH\n// LIFECYCLE\n</script>\n\n<!--// Displaying 1 - 5 of 5  -->\n<template>\n  <div class=\"pagination flex justify-between items-center text-sm text-slate-700 leading-relaxed mt-4\">\n    <div class=\"displaying text-slate-700\">\n      Displaying {{ paginate.offset+1 }}\n      - {{ Number(paginate.end) > paginate.total ? paginate.total : paginate.end }}\n      of {{ paginate.total }}\n    </div>\n    <div class=\"paginate text-slate-700\">\n      <ul class=\"flex space-x-1.5\">\n        <li>\n          <button :class=\"`paginate ${paginate.page === 1 ? 'disabled' : ''}`\"\n              :disabled=\"paginate.page === 1\"\n              @click=\"paginate.page--\"><IconLeftArrow class=\"w-4 h-4\" /></button>\n        </li>\n        <li v-for=\"(_, index) of paginate.pages\" :key=\"index\">\n          <button :class=\"`paginate ${paginate.page === (index+1) ? 'active' : ''}`\"\n              @click=\"paginate.page = (index + 1)\">{{ index + 1 }}</button>\n        </li>\n        <li>\n          <button :class=\"`paginate ${paginate.page === paginate.pages ? 'disabled' : ''}`\"\n              :disabled=\"paginate.page === paginate.pages\"\n              @click=\"paginate.page++\"><IconRightArrow class=\"w-4 h-4\" /></button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport { ref, reactive, watch, computed, onMounted } from 'vue';\n\ninterface Props {\n  default: string,\n  label: string\n  name: string\n  options: string[]\n  modelValue: string | number\n}\n// REFERENCES\nconst emit = defineEmits<{\n  (e: 'change:select', value: string): void\n}>()\nconst props = defineProps<Props>()\n\n// DATA\nconst defaultValue = ref(props.default)\nconst selected = computed(() => props.default ? props.default : props.options.length > 0 ? props.options[0] : null)\n\n// COMPUTED\n\n// METHODS\nfunction handleChange(event) {\n  emit('change:select', event)\n}\n\n// WATCH\n\n// LIFECYCLE\n\n</script>\n\n<template>\n  <div :class=\"label ? 'timeframe flex flex-col items-center md:flex-row md:space-x-12' : ''\">\n    <label v-if=\"label\">{{ label }}</label>\n    <div class=\"inline-block relative w-64\">\n      <select\n          class=\"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\n          :name=\"name\"\n          @change=\"handleChange\"\n      >\n        <option v-if=\"defaultValue\">{{ defaultValue }}</option>\n        <option v-for=\"(option, index) of options\" :key=\"index\" :value=\"option\" :selected=\"option===selected\">{{ option }}</option>\n      </select>\n      <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n        <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/></svg>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n\n</style>\n","<script lang=\"ts\" setup>\nimport {ref, reactive, computed, onMounted, defineAsyncComponent, watch} from 'vue';\nimport { isEmpty } from 'lodash'\nimport useFetch from '@/composables/useFetch'\nimport { compareEntries, filterEntries, paginateEntries, unique } from '@/helpers'\n\nimport { Table } from '@/student/components/tables/datatable'\nimport Pagination from '@/components/Pagination.vue'\nimport Loader from \"@/components/Loader.vue\";\nimport Error from '@/components/Error.vue'\nimport { SelectField, InputField } from '@/components/fields'\n\nimport type { User } from '@/types/typings'\n\nconst Row = defineAsyncComponent({\n  loader: () => import('@/student/components/tables/completed/Row.vue'),\n  LoadingComponent: 'Loading...',\n  suspensible: false,\n  delay: 2000\n})\n\n// REFERENCES\nconst emit = defineEmits<{\n  // (e: 'update:modelValue', option: string): void\n}>()\nconst props = defineProps<{\n currentUser: User\n}>()\n// DATA\nconst loading = ref<boolean>(false)\nconst error   = ref<object | null>(null)\nconst columns = reactive<object>([\n  {id: 1, key: 'event', value: 'title', name: 'Work', sortable: true, width: '30%'},\n  {id: 2, key: 'event', value: 'record_status', name: 'Your Status', sortable: true, width: '18%'},\n  {id: 3, key: 'course', value: 'course', name: 'Course', sortable: true, width: '17.5%'},\n  {id: 4, key: 'event', value: 'due_date', name: 'Due', sortable: true, width: '17.5%'},\n  {id: 5, key: 'action', value: '', name: 'Action', sortable: false, width: '17%'},\n])\nconst entries = ref<object[]>([])\nconst sort = reactive({\n  key: 'event',\n  column: 'id',\n  direction: 'asc'\n})\nconst filter = reactive({\n  timeframe: 'all',\n  limit: [],\n  search: '', // TODO:: would be part od the admin/instructor list\n})\n// COMPUTED\nconst filteredEntries = computed(() => {\n  let newEntries = entries.value || []\n  if(!isEmpty(newEntries) && Array.isArray(newEntries)) { // newEntries instanceof Array\n    newEntries = newEntries?.sort(compareEntries(sort.key, sort.column, sort.direction))\n    newEntries = Object.entries(filter) ? filterEntries(newEntries, filter) : newEntries\n    newEntries = paginateEntries(newEntries, paginate.offset, paginate.end)\n    return newEntries\n  }\n  return newEntries\n})\nconst options   = computed(() => unique(entries.value, 'course', 'term').sort((a,b) => a.localeCompare(b)))\nconst paginate  = reactive({\n  page: 1,\n  limit: 5,\n  total: computed(() => entries.value?.length),\n  pages: computed<number>(() => Math.ceil(entries.value?.length / Number(paginate.limit)) || 1),\n  offset: computed<number>(() => (Number(paginate.page) * Number(paginate.limit) - Number(paginate.limit))), // start\n  end: computed<number>(() => Number(paginate.offset) + Number(paginate.limit))\n})\n// METHODS\nfunction emitSortBy(event) {\n  Object.assign(sort, event)\n}\nfunction updateData(event: HTMLInputElement | any) {\n  let { name, value, checked } = event.target\n  let dataValue = event.target.dataset.value  // ['data-value']\n  if(event.target.type === 'checkbox') {\n    const targetKey: string[] = filter[name]\n    if(checked) {\n      targetKey.push(dataValue)\n    } else {\n      const index = targetKey.indexOf(dataValue)\n      targetKey.splice(index, 1)\n    }\n  } else {\n    filter[name] = value\n  }\n  if(filter.timeframe === 'all' && !event.target.checked && filter.limit.length === 0) {\n    paginate.pages = computed<number>(() => Math.ceil(entries.value?.length / Number(paginate.limit)) || 1)\n  } else {\n    paginate.pages = computed<number>(() => Math.ceil(filteredEntries.value?.length / Number(paginate.limit)) || 1)\n  }\n  paginate.page = 1\n}\n// WATCH\nwatch([ sort, filter, paginate ], () => {\n  filteredEntries.value\n}, { deep: true })\n// LIFECYCLE\nonMounted(async () => {\n  try {\n    loading.value = true\n    const eventsResponse: Promise<IHttpResponse | any> = await useFetch('/home?work=completed', {method: 'GET', timeout: 300})\n    entries.value = eventsResponse.data\n  } catch (err: Error | any) {\n    error.value = {text: err.message, type: 'error'};\n  } finally {\n    loading.value = false\n  }\n})\n</script>\n\n<template>\n  <div class=\"completed-work mx-4 my-8\">\n    <Error v-if=\"error\" class=\"completed error\" :error=\"error\" />\n    <div class=\"flex flex-col space-y-2 my-4\">\n      <div class=\"timeframe flex flex-col items-center md:flex-row md:space-x-12\">\n        <div class=\"label\">Timeframe:</div>\n        <SelectField :default=\"filter.timeframe\" :options=\"options\" :name=\"'timeframe'\" @change:select=\"updateData\" />\n      </div>\n      <div class=\"limit flex flex-col items-center md:flex-row md:space-x-16\">\n        <div class=\"label\">Limit To:</div>\n        <div class=\"flex items-center space-x-4\">\n          <InputField class=\"text-sm\" type=\"checkbox\" name=\"limit\" value=\"can_edit\" label=\"Work I can still edit\" @change:input=\"updateData\" />\n          <InputField class=\"text-sm\" type=\"checkbox\" name=\"limit\" value=\"can_view\" label=\"Peer reviews of me I can see\" @change:input=\"updateData\" />\n        </div>\n      </div>\n    </div>\n    <Table :error=\"error\" :columns=\"columns\" @update:sort=\"emitSortBy\">\n      <tr v-if=\"loading\">\n        <td :colspan=\"columns.length\">\n          <Loader height=\"200px\" />\n        </td>\n      </tr>\n      <tr v-else-if=\"!loading && isEmpty(filteredEntries)\">\n        <td :colspan=\"columns.length\">\n          <div class=\"flex justify-center items-center p-8\">No Content found!</div>\n        </td>\n      </tr>\n      <template v-else-if=\"!loading && !isEmpty(filteredEntries)\">\n        <Row v-for=\"(row, index) of filteredEntries\" :key=\"`${index}_${row?.event?.id}`\" :data-index=\"index\" :row=\"row\" />\n      </template>\n    </Table>\n    <Pagination :paginate=\"paginate\" />\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport {ref, reactive, watch, computed, onMounted, defineAsyncComponent, onErrorCaptured, toRef} from 'vue'\nimport swal from 'sweetalert'\nimport useFetch from '@/composables/useFetch'\nimport CurrentWork from '@/student/components/tables/CurrentWork.vue'\nimport CompletedWork from '@/student/components/tables/CompletedWork.vue'\nimport Loader from '@/components/Loader.vue'\nimport Error from '@/components/Error.vue'\nimport SectionTitle from '@/components/SectionTitle.vue'\nimport SectionSubtitle from '@/components/SectionSubtitle.vue'\nimport {IconNotepad, IconCheckedBox} from '@/components/icons'\nimport type { User, Event, Course, Group, Penalty } from '@/types/typings'\n\ninterface IEventProps {\n  event: Event\n  course: Course\n  group: Group\n  penalties: Penalty[]\n  late: boolean\n  percent_penalty: string\n}\ninterface ICurrentWork {\n  current: IEventProps[]\n}\ninterface ICompletedWork {\n  completed: IEventProps[]\n}\ninterface IData {\n  current: ICurrentWork\n  completed: ICompletedWork\n}\ninterface IHttpResponse {\n  data: IData\n}\n// const CurrentWork = defineAsyncComponent({\n//   loader: () => import('@/student/components/tables/CurrentWork.vue'),\n//   LoadingComponent: Loader,\n//   delay: 2000,\n//   errorComponent: Error,\n//   timeout: 3000,\n//   suspensible: false\n// })\n// const CompletedWork = defineAsyncComponent({\n//   loader: () => import('@/student/components/tables/CompletedWork.vue'),\n//   LoadingComponent: Loader,\n//   delay: 2000,\n//   errorComponent: Error,\n//   timeout: 3000,\n//   // suspensible: false\n// })\n// REFERENCES\nconst emit = defineEmits<{}>()\nconst props = defineProps<{\n  currentUser: User\n}>()\n// DATA\nconst error = ref<object | null>(null)\n// const error = ref<object | null>(null)\n// const columns = reactive<object>({\n//   current: [\n//     {id: 1, key: 'event', value: 'title', name: 'Work', sortable: true, width: '30%'},\n//     {id: 2, key: 'course', value: 'course', name: 'Course', sortable: true, width: '23%'},\n//     {id: 3, key: 'event', value: 'due_date', name: 'Due', sortable: true, width: '30%'},\n//     {id: 4, key: 'action', value: '', name: 'Action', sortable: false, width: '17%'},\n//   ],\n//   completed: [\n//     {id: 1, key: 'event', value: 'title', name: 'Work', sortable: true, width: '30%'},\n//     {id: 2, key: 'event', value: 'record_status', name: 'Your Status', sortable: true, width: '18%'},\n//     {id: 3, key: 'course', value: 'course', name: 'Course', sortable: true, width: '17.5%'},\n//     {id: 4, key: 'event', value: 'due_date', name: 'Due', sortable: true, width: '17.5%'},\n//     {id: 5, key: 'action', value: '', name: 'Action', sortable: false, width: '17%'},\n//   ]\n// })\n// const entries = reactive<object>({})\n\n// COMPUTED\n// METHODS\nfunction onErrorCaptured(event) {\n  error.value = event\n}\n// WATCH\n// LIFECYCLE\n\n// onMounted(async () => {\n//   try {\n//     const eventsResponse: Promise<IHttpResponse | any> = await useFetch('/home', {method: 'GET', timeout: 300})\n//     const events: IData = eventsResponse.data\n//     Object.assign(entries, events);\n//   } catch (err: Error | any) {\n//     error.value = {text: err.message, type: 'error'};\n//   }\n// })\n</script>\n\n<template>\n  <div class=\"events\">\n    <div v-if=\"error\" class=\"events error\">{{ JSON.stringify(error, null, 2) }}</div>\n\n    <section>\n      <SectionTitle title=\"Current Work To Do\"></SectionTitle>\n      <SectionSubtitle subtitle=\"Do the work assigned to you\" :icon=\"{src: IconCheckedBox, size: '3.5rem'}\">\n        <p class=\"mx-4\">Instructors will set specific timeframes for reviewing your group. When work is available, it will appear here until you complete it or the final due date passes.</p>\n      </SectionSubtitle>\n\n      <Suspense>\n        <template #default>\n          <CurrentWork :current-user=\"currentUser\" />\n        </template>\n        <template #fallback>\n          <Loader />\n        </template>\n      </Suspense>\n    </section>\n\n    <section>\n      <SectionTitle title=\"Closed or Completed Work\"></SectionTitle>\n      <SectionSubtitle subtitle=\"See past work and reviews of your teamwork\" :icon=\"{src: IconNotepad, size: '3.25rem'}\">\n        <p class=\"mx-4\">Below you can find previously assigned work that you have completed or that has closed. After a peer review closes, your instructor may or may not let you see how your peers evaluated you. If any reviews of you are available, they will be linked below.</p>\n      </SectionSubtitle>\n\n      <Suspense>\n        <template #default>\n          <CompletedWork :current-user=\"currentUser\" />\n        </template>\n        <template #fallback>\n          <Loader />\n        </template>\n      </Suspense>\n    </section>\n  </div>\n</template>\n"],"file":"js/vue/EventsIndex.js"}