{"version":3,"file":"SimpleEvaluation.js","sources":["../../../../vue-ts-ipeer/src/components/fields/InputRange.vue","../../../../vue-ts-ipeer/src/student/views/questions/PeerSimpleRangeQuestion.vue","../../../../vue-ts-ipeer/src/student/views/templates/SimpleEvaluation.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { toRefs } from 'vue';\nimport { useField } from 'vee-validate'\n\nexport interface Props {\n  label?: string\n  name: string\n  value: string\n  response: object\n  points: string | number\n  rules?: string\n  disabled?: boolean\n  placeholder?: string\n  min?: string | number\n  step?: string | number\n  max?: string | number\n  text?: string[]\n}\n\n// REFERENCES\nconst emit = defineEmits<{\n  (e: 'update:input', option: object): void\n}>()\nconst props = withDefaults(defineProps<Props>(), {\n  min: 0,\n  step: 1,\n  max: 100,\n  text: () => ['min', 'max'],\n  placeholder: '',\n  disabled: false\n})\n\nconst { name, value } = toRefs(props);\nconst { value: inputValue, errorMessage, handleBlur, handleChange, meta } = useField(name, props.rules, {\n  initialValue: props.value,\n  validateOnValueUpdate: true\n});\n// DATA\nconst validationListeners = {\n  blur: handleChange,\n  change: handleChange,\n  input: (e: unknown) => handleChange(e, !!errorMessage.value)\n}\n// COMPUTED\n// METHODS\n// WATCH\n// LIFECYCLE\n</script>\n\n<template>\n  <div class=\"block block-slider\" :class=\"{ 'has-error': !!errorMessage, success: meta.valid }\">\n    <label class=\"form-range form-range-inline flex flex-col\">\n      <span class=\"form-range-label text-slate-500\">{{ props.label }}</span>\n      <span class=\"tick\"></span>\n      <input class=\"form-range-input\" type=\"range\"\n             :min=\"props.min\" :step=\"props.step\" :max=\"props.max\"\n             :name=\"name\"\n             :value=\"inputValue\"\n             :disabled=\"disabled\"\n             v-on=\"validationListeners\"\n             @input=\"$emit('update:input', $event)\"\n             @blur=\"handleBlur\"\n      />\n    </label>\n    <div v-if=\"props.text\" class=\"flex justify-between items-center\">\n      <div v-if=\"props.text[0]\" class=\"min text-sm text-slate-500 font-normal\">{{ props.text[0] }}</div>\n      <div v-if=\"props.text[1]\" class=\"max text-sm text-slate-500 font-normal\">{{ props.text[1] }}</div>\n    </div>\n  </div>\n</template>","<script lang=\"ts\" setup>\nimport {ref, reactive, watch, computed, onMounted, toRef, onBeforeMount} from 'vue';\nimport {findIndex, forEach, map, reduce} from \"lodash\";\n\nimport UserCard from '@/student/components/UserCard.vue'\nimport {InputRange} from '@/components/fields'\n\nimport type { EvaluationReviewResponse, User } from '@/types/typings'\n// REFERENCES\nconst emit = defineEmits<{\n  // (e: 'updateModelValue', option: string): void\n}>()\nconst props = defineProps<{\n  members: User[]\n  initialState: EvaluationReviewResponse\n  remaining: string | number\n  name: string\n  label?: string\n  question?: string\n  description?: string\n  placeholder?: string\n  disabled?: boolean | false\n}>();\n\n// DATA\nconst response = toRef(props, 'initialState')\n\nconst total_points = ref(props.remaining ?? props.members.length * 100)\n\nconst student_slider = ref([])\nconst slider_sum = ref(0)\n\nconst student_scores = ref([])\n\n// COMPUTED\n\n// WATCH\n\nconst theSumThingDelete = ref(0);\n\nfunction distributeDecimalRemainder() {\n\n  const studentScoreSum = reduce(student_scores.value, (acc, val) => acc += val, 0);\n  const remainder = total_points.value - studentScoreSum\n\n  const lowestScore = remainder > 0 ? Math.min(...student_scores.value) : Math.max(...student_scores.value)\n  const memberIdx = findIndex(student_scores.value, (val) => val === lowestScore)\n\n  student_scores.value[memberIdx] += remainder\n}\n\n// METHODS\nfunction updateStudentSlider(event: {target:string, key:string, value: string}) {\n  const {target, key, value} = event;\n\n  const oldValue = student_slider.value[key]\n  slider_sum.value += parseInt(value) - oldValue\n\n  if (slider_sum.value <= 0){\n    student_scores.value = map(student_scores.value, () => total_points.value / student_scores.value.length)\n  } else {\n    student_slider.value[key] = parseInt(value);\n    student_scores.value = map(student_slider.value, (sliderValue) => Math.round(total_points.value * sliderValue / slider_sum.value))\n  }\n\n\n  distributeDecimalRemainder()\n\n  theSumThingDelete.value = reduce(student_scores.value, (acc, val) => acc += val, 0)\n\n  response.value.data.points = student_scores.value\n}\n\n\n// LIFECYCLE\n\nonBeforeMount(() => {\n  const initialPoints: number[] | undefined = response.value?.data?.points\n\n  if (initialPoints?.length) {\n    student_scores.value = [...initialPoints]\n    student_slider.value = map(initialPoints, (val, index) => {\n      const studentScoreValue = parseInt(val)\n      const studentPercentValue = studentScoreValue / total_points.value\n      const defaultStudentSliderValue = 100 * studentPercentValue\n      slider_sum.value += defaultStudentSliderValue;\n      return defaultStudentSliderValue\n    })\n  } else {\n    const defaultStudentSliderValue = Math.round(total_points.value / props.members.length)\n    student_slider.value = map(props.members, () => defaultStudentSliderValue)\n    slider_sum.value = defaultStudentSliderValue * props.members?.length\n    student_scores.value = map(props.members, () => total_points.value / props.members.length)\n  }\n\n  theSumThingDelete.value = reduce(student_scores.value, (acc, val) => acc += parseInt(val), 0)\n})\n</script>\n\n<template>\n  <div class=\"datatable\">\n    <div v-if=\"props.question\" class=\"question\">{{ props.question }}</div>\n    <div v-if=\"props.description\" class=\"description text-sm mx-4 mb-2\">{{ props.description }}</div>\n\n    <div class=\"debugger _hidden\">\n      <div class=\"text-xs text-red-500\">total_points: {{ total_points }}</div>\n      <div class=\"text-xs text-red-500\">slider_sum: {{ slider_sum }}</div>\n      <div class=\"text-xs text-red-500\">student_slider: {{ student_slider }}</div>\n      <div class=\"text-xs text-red-500\">student_scores: {{ student_scores }}</div>\n      <div class=\"text-xs text-red-500\">theSumThingDelete: {{ theSumThingDelete }}</div>\n    </div>\n\n    <table class=\"standardtable\">\n      <thead>\n      <tr>\n        <th><div class=\"\">Peer</div></th>\n        <th><div class=\"\">Relative Contribution</div></th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"(member, memberIdx) of props.members\" :key=\"member.id\">\n        <td style=\"width: 20%\"><UserCard :member=\"member\" /></td>\n        <td style=\"width: 80%\">\n        <input type=\"hidden\" :name=\"`${name}[${memberIdx}]`\" :value=\"response?.data && response?.data[name] ? response?.data[name][memberIdx] : ''\" />\n        <InputRange\n            :text=\"['Less', 'More']\"\n            :label=\"'A fair amount'\"\n            :name=\"`percent[${memberIdx}]`\"\n            :value=\"student_slider[memberIdx]\"\n            :response=\"response?.data.points\"\n            :points=\"response?.data && response?.data?.points ? response?.data?.points[memberIdx] : ''\"\n            :placeholder=\"placeholder\"\n            :disabled=\"props.disabled\"\n            @update:input=\"updateStudentSlider({target:name, key:memberIdx, value: $event.target.value})\"\n        />\n          <div class=\"debugger\">{{ response?.data && response?.data?.points ? response?.data?.points[memberIdx] : '' }}</div>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport { ref, unref, toRef, reactive, watch, computed, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router'\nimport { isEmpty, map } from 'lodash'\n\nimport TakeNote from '@/student/components/TakeNote.vue'\nimport EvaluationForm from '@/student/views/EvaluationForm.vue'\nimport PeerSimpleRangeQuestion from '@/student/views/questions/PeerSimpleRangeQuestion.vue'\nimport PeerSimpleCommentQuestion from '@/student/views/questions/PeerSimpleCommentQuestion.vue'\nimport { InputText } from '@/components/fields'\n\nimport type { Evaluation, EvaluationReviewResponse, User } from '@/types/typings'\n// REFERENCES\nconst emit = defineEmits<{\n  (e: 'fetch:evaluation'): void\n}>()\nconst props = defineProps<{\n  currentUser: User\n  evaluation: Evaluation\n}>()\nconst route = useRoute()\nconst router = useRouter()\n// DATA\nconst evaluation_form = ref()\nconst evaluation    = toRef(props, 'evaluation')\nlet form            = reactive({\n  event_id: computed(() => evaluation.value?.id),\n  group_id: computed(() => evaluation.value?.group?.id),\n  course_id: computed(() => evaluation.value?.course?.id),\n  group_event_id: computed(() => evaluation.value?.group_event_id),\n  rubric_id: computed(() => evaluation.value?.rubric_id),\n  user_id: computed(() => props.currentUser?.id),\n  evaluatee_count: computed(() => evaluation.value?.members?.length),\n  member_ids: computed<string[]>(() => map(evaluation.value?.members, member => member.id))\n})\nconst initialState  = computed<EvaluationReviewResponse | any>(() => {\n  if(evaluation.value?.review?.response && !isEmpty(evaluation.value?.review?.response)) {\n    return unref(evaluation.value?.review?.response)\n  } else {\n    return {\n      submitter_id: evaluation.value?.id,\n      submitted: null,\n      date_submitted: '',\n      data: {\n        points: [],\n        comments: []\n      }\n    }\n  }\n})\nconst questions = reactive({\n  points: {\n    title: '1. Please rate each peer\\'s relative contribution.',\n    description: 'Section description'\n  },\n  comments: {\n    title: '2. Please provide overall comments about each peer.',\n    description: 'Section description'\n  }\n})\n// COMPUTED\nconst isDisabled = computed(() => {\n  if(route.path === 'submissions') {\n    return true\n  }\n  return false // will be determined by the evaluation settings\n  // return new Date().toLocaleDateString('en-CA', {}) >= new Date(props.evaluation?.due_date).toLocaleDateString('en-CA', {})\n})\n// METHODS\n// WATCH\n// LIFECYCLE\n</script>\n\n<template>\n  <EvaluationForm\n      @submit=\"onSubmit\"\n      :initial-state=\"initialState\"\n      :evaluation=\"props.evaluation\"\n      v-slot=\"{ onSave, errors, values, isSubmitting, evaluationRef }\"\n  >\n    <slot name=\"header\">\n      <InputText type=\"hidden\" name=\"event_id\" :value=\"props.evaluation?.id\" />\n      <InputText type=\"hidden\" name=\"group_id\" :value=\"props.evaluation?.group?.id\" />\n      <InputText type=\"hidden\" name=\"course_id\" :value=\"props.evaluation?.course?.id\" />\n      <InputText type=\"hidden\" name=\"data[Evaluation][evaluator_id]\" :value=\"props.currentUser?.id\" />\n      <InputText type=\"hidden\" name=\"evaluateeCount\" :value=\"props.evaluation?.members?.length\" />\n      <InputText type=\"hidden\" name=\"memberIDs[]\" v-for=\"(m,i) of form?.member_ids\" :key=\"i\" :value=\"m\" />\n    </slot>\n\n    <slot name=\"main\">\n      <!---->\n      <PeerSimpleRangeQuestion\n          :members=\"evaluation?.members\"\n          :remaining=\"evaluation?.remaining\"\n          :initialState=\"initialState\"\n          :name=\"`points`\"\n          :question=\"questions.points.title\"\n          :description=\"questions.points.description\"\n          :disabled=\"isDisabled\"\n      />\n\n      <PeerSimpleCommentQuestion\n          :members=\"evaluation?.members\"\n          :initialState=\"initialState\"\n          :name=\"'comments'\"\n          :disabled=\"isDisabled\"\n          :question=\"questions.comments.title\"\n          :description=\"questions.comments.description\"\n      />\n    </slot>\n\n    <slot name=\"footer\"></slot>\n\n    <slot name=\"cta\" :on-save=\"onSave\" :is-submitting=\"isSubmitting\" :values=\"values\"></slot>\n\n  </EvaluationForm>\n</template>\n\n<!--\n  <EvaluationForm ref=\"evaluation_form\" :currentUser=\"currentUser\" :evaluation=\"evaluation\" :form=\"form\">\n    <template v-slot:header>\n      <InputElement type=\"hidden\" name=\"action\" :value=\"props.action\" />\n      <InputElement type=\"hidden\" name=\"_method\" :value=\"props._method\" />\n\n      <InputElement type=\"hidden\" name=\"event_id\" :value=\"params?.event_id\" />\n      <InputElement type=\"hidden\" name=\"group_id\" :value=\"params?.group_id\" />\n      <InputElement type=\"hidden\" name=\"course_id\" :value=\"params?.course_id\" />\n      <InputElement type=\"hidden\" name=\"data[Evaluation][evaluator_id]\" :value=\"params?.user_id\" />\n      <InputElement type=\"hidden\" name=\"evaluateeCount\" :value=\"params?.evaluatee_count\" />\n      <InputElement type=\"hidden\" name=\"memberIDs\" :value=\"params?.member_ids\" />\n    </template>\n\n    < !--<template v-slot:main=\"{ params, form }\">-- >\n    <template v-slot:main>\n\n      <PeerSimpleRangeQuestion\n          :members=\"props.evaluation?.members\"\n          :form=\"values\"\n          :name=\"`points`\"\n          question=\"1. Please rate each peer's relative contribution.\"\n          description=\"just a points section description\"\n          :disabled=\"isDisabled\"\n      />\n\n      <div class=\"temp text-left\">\n        <div class=\"text-xs text-blue-500\">remaining: {{ props.evaluation?.review?.remaining }}</div>\n        <div class=\"text-xs text-blue-500\">form.points: {{ form.points }}</div>\n        <div class=\"text-xs text-blue-500\">values.points: {{ values.points }}</div>\n      </div>\n\n\n      <PeerSimpleCommentQuestion\n          :members=\"props.evaluation?.members\"\n          :form=\"form\"\n          :name=\"`comments`\"\n          question=\"2. Please provide overall comments about each peer.\"\n          description=\"just a comments section description\"\n          :disabled=\"isDisabled\"\n      />\n      <div class=\"text-xs text-left text-blue-500 py-2 px-4\" v-for=\"(comment, idx) of values.comments\" :key=\"idx\">{{ comment }}</div>\n\n    </template>\n\n    <template v-slot:footer>\n      <TakeNote />\n    </template>\n\n    <template v-slot:action=\"{ onSave }\">\n      <slot name=\"cta\" :on-save=\"onSave\"></slot>\n    </template>\n\n  </EvaluationForm>\n</template>\n\n\n\n\n\n< !--<template>-- >\n< !--  <div class=\"simple-valuation-template\">-- >\n    < !--\n    <EvaluationForm\n        :params=\"params\"\n        :form=\"form\"\n        :currentUser=\"props.currentUser\"\n        :evaluation=\"props.evaluation\"\n    >-- >\n\n  < !--\n  <PeerRangeQuestion\n      question=\"1. Please rate each peer's relative contribution.\"\n      title=\"Relative Contribution\"\n      :members=\"props.evaluation?.members\"\n      :name=\"''\"\n      :form=\"form\"\n      :remaining=\"props.evaluation?.review?.remaining\"\n      :min=\"0\"\n      :max=\"100\"\n      :disabled=\"isDisabled\"\n      />-- >\n\n    < !--\n    </EvaluationForm>-- >\n< !--  </div>-- >\n</template>-->"],"names":["name","value","toRefs","props","inputValue","errorMessage","handleBlur","handleChange","meta","useField","validationListeners","e","response","toRef","total_points","ref","_a","student_slider","slider_sum","student_scores","theSumThingDelete","distributeDecimalRemainder","studentScoreSum","reduce","acc","val","remainder","lowestScore","memberIdx","findIndex","updateStudentSlider","event","target","key","oldValue","map","sliderValue","onBeforeMount","initialPoints","_b","index","studentPercentValue","defaultStudentSliderValue","_c","route","useRoute","useRouter","evaluation","form","reactive","computed","member","initialState","isEmpty","_d","unref","_f","_e","_g","questions","isDisabled"],"mappings":"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"}