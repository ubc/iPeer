{"version":3,"file":"SubmissionIndex.js","sources":["../../../vueapp/src/pages/SubmissionIndex.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { ref, reactive, onMounted, computed } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { useStore } from '@/stores/main'\nimport { useAuthStore } from '@/stores/auth'\nimport { useReviewsStore } from '@/stores/reviews'\n// import { useEvaluationStore } from '@/stores/evaluation'\n\nimport Loader from '@/components/Loader.vue'\nimport PageHeading from '@/components/PageHeading.vue'\nimport ViewHeading from '@/student/components/ViewHeading.vue'\nimport { IconTwoUsers } from '@/components/icons'\nimport { NotAvailable } from '@/components/messages'\n\nimport type {IUser, IEvaluation, IReview} from '@/types/typings'\n\n// TODO:: Bring in Pinia Store for currentUser, evaluation and members\ninterface Props {}\n// REFERENCES\nconst emit                = defineEmits<{}>()\nconst props               = defineProps<Props>()\nconst route               = useRoute()\nconst store               = useStore()\nconst authStore           = useAuthStore()\nconst reviewsStore        = useReviewsStore()\n// DATA\nconst event_id            = ref<number|any>(route.params.event_id)\nconst group_id            = ref<number|any>(route.params.group_id)\n\nconst state = reactive({\n  loading: computed<boolean>(() => reviewsStore.loading),\n  error: computed<boolean|any>(() => reviewsStore.error),\n  hasError: computed<boolean>(() => reviewsStore.hasError),\n  reviews: computed<IReview|null>(() => reviewsStore.reviews),\n  members: computed<IUser[]|null>(() => reviewsStore.getGroupMembers)\n})\n\n// COMPUTED\nconst currentUser         = computed<IUser|null>(() => authStore.getCurrentUser)\nconst isDisabled          = computed<boolean>(() => route.name === 'submission.view')\n\n// METHODS\n// WATCH\n// LIFECYCLE\nonMounted(async () => await reviewsStore.fetchReviews(event_id.value, group_id.value))\n</script>\n\n<template>\n  <template v-if=\"state.loading\">\n    <Loader />\n  </template>\n  <template v-else-if=\"!state.loading && state.hasError && !state.reviews\">\n    <NotAvailable :data=\"state.error\" />\n  </template>\n  <template v-else-if=\"!state.loading && !state.hasError && state.reviews\">\n    <PageHeading :title=\"state.reviews?.event?.title\" :settings=\"{title: `View ${state.reviews?.event?.title}`}\">\n      <ViewHeading\n          :due-date=\"state.reviews?.event?.due_date\"\n          :submitted-date=\"state.reviews?.simple?.date_submitted\"\n          :is-result-released=\"state.reviews?.event?.is_result_released\"\n          :penalties=\"state.reviews?.penalty\"\n          :group=\"state.reviews?.group\"\n          :course=\"state.reviews?.course\"\n          :icon=\"{src: IconTwoUsers, size: '6rem'}\"\n      />\n    </PageHeading>\n\n    <router-view\n        class=\"tab-pane fade show active\"\n        :current-user=\"currentUser\"\n        :members=\"state.members\"\n        :reviews=\"state.reviews\"\n        :is-disabled=\"isDisabled\"\n    ></router-view>\n  </template>\n  <template v-else-if=\"!state.loading && state.hasError && !state.reviews\">\n    <NotAvailable status=\"custom\" :data=\"state.error\" />\n  </template>\n</template>\n"],"names":["route","useRoute","useStore","authStore","useAuthStore","reviewsStore","useReviewsStore","event_id","ref","group_id","state","reactive","computed","currentUser","isDisabled","onMounted"],"mappings":"6gBAqBA,MAAMA,EAAsBC,IACAC,EAAS,EACrC,MAAMC,EAAsBC,IACtBC,EAAsBC,IAEtBC,EAAsBC,EAAgBR,EAAM,OAAO,QAAQ,EAC3DS,EAAsBD,EAAgBR,EAAM,OAAO,QAAQ,EAE3DU,EAAQC,EAAS,CACrB,QAASC,EAAkB,IAAMP,EAAa,OAAO,EACrD,MAAOO,EAAsB,IAAMP,EAAa,KAAK,EACrD,SAAUO,EAAkB,IAAMP,EAAa,QAAQ,EACvD,QAASO,EAAuB,IAAMP,EAAa,OAAO,EAC1D,QAASO,EAAuB,IAAMP,EAAa,eAAe,CAAA,CACnE,EAGKQ,EAAsBD,EAAqB,IAAMT,EAAU,cAAc,EACzEW,EAAsBF,EAAkB,IAAMZ,EAAM,OAAS,iBAAiB,EAK1E,OAAAe,EAAA,SAAY,MAAMV,EAAa,aAAaE,EAAS,MAAOE,EAAS,KAAK,CAAC"}