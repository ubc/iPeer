{"version":3,"file":"UserProfile.js","sources":["../../../vueapp/src/components/icons/IconKey.vue","../../../vueapp/src/components/icons/IconUser.vue","../../../vueapp/src/student/views/UserForm.vue","../../../vueapp/src/student/views/UserProfile.vue"],"sourcesContent":["<template>\n  <svg id=\"emoji\" viewBox=\"0 0 72 72\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g id=\"line\">\n      <polyline fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" points=\"30.735,34.6557 14.3026,50.6814 14.3026,57.9214 21.868,57.9214 21.868,53.2845 26.9929,53.2845 26.9929,47.4274 32.0913,47.4274 34.4957,45.023 34.4957,40.6647 36.5107,40.6647\"/>\n      <circle cx=\"48.5201\" cy=\"23.9982\" r=\"3.9521\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M34.2256,31.1781c-1.4298-4.2383-0.3466-9.2209,3.1804-12.6947c4.8446-4.7715,12.4654-4.8894,17.0216-0.2634 s4.3223,12.2441-0.5223,17.0156c-3.9169,3.8577-9.6484,4.6736-14.1079,2.3998\"/>\n    </g>\n  </svg>\n</template>","<template>\n  <svg id=\"emoji\" viewBox=\"0 0 72 72\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g id=\"line\">\n      <path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M58,60c0,0,0-2-1-6 c-1.2109-4.8457-4-8-10-8c-5,0-15,0-22,0c-6,0-8.7891,3.1543-10,8c-1,4-1,6-1,6\"/>\n      <path fill=\"none\" stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M26,26c0,3.7246,0.5391,7.8086,2,10 c1.8613,2.793,5.0176,4,8,4c3.0957,0,6.1367-1.207,8-4c1.46-2.1914,2-6.2754,2-10c0-2.7935-1-12-10-12S26,21.3442,26,26z\"/>\n    </g>\n  </svg>\n</template>","<script lang=\"ts\" setup>\nimport { ref } from 'vue'\nimport { useForm } from 'vee-validate'\nimport { useAuthStore } from '@/stores/auth'\nimport type { IUser } from '@/types/typings'\ninterface Props {\n  initialState: IUser\n}\n// REFERENCES\nconst emit    = defineEmits<{}>()\nconst props   = defineProps<Props>()\nconst auth    = useAuthStore()\n// DATA\nconst userRef = ref(null)\n// COMPUTED\nconst { values, errors, meta, handleSubmit, isSubmitting } = useForm({\n  initialValues: props.initialState\n})\n// METHODS\nfunction onInvalidateSubmit({ values, errors, results }: any) {\n  const fieldName = Object.keys(errors)[0]\n  const fieldElement = document.getElementById(fieldName)\n  fieldElement?.focus?.()\n  fieldElement?.scrollIntoView({ behavior: 'smooth' })\n}\nconst onSubmit = handleSubmit(async (values: unknown) => {\n  const profileSearchParams: any = new URLSearchParams()\n  for (const pair of Object.entries(values)) {\n    if(pair[1] === undefined) {\n      profileSearchParams.append(pair[0], '')\n    } else {\n      profileSearchParams.append(pair[0], pair[1])\n    }\n  }\n  await auth.updateCurrentUser(props.initialState?.id, profileSearchParams)\n\n}, onInvalidateSubmit)\n// WATCH\n// LIFECYCLE\n</script>\n\n<template>\n  <form novalidate @submit.prevent=\"onSubmit\" id=\"user_form\" class=\"user-form\" ref=\"user_form\">\n    <slot :values=\"values\" :errors=\"errors\" :meta=\"meta\" :isSubmitting=\"isSubmitting\" />\n  </form>\n</template>\n","<script setup lang=\"ts\">\nimport { ref, computed, reactive } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { useStore } from '@/stores/main'\nimport { useAuthStore } from '@/stores/auth'\nimport * as Yup from 'yup'\nimport UserForm from '@/student/views/UserForm.vue'\nimport PageHeading from '@/components/PageHeading.vue'\nimport SectionTitle from '@/components/SectionTitle.vue'\nimport SectionSubtitle from '@/components/SectionSubtitle.vue'\nimport { IconUser, IconKey, IconSpinner } from '@/components/icons'\nimport { CustomHiddenField, CustomInputField } from '@/components/fields'\nimport {\n  validateFirstNameField,\n  validateLastNameField,\n  validateEmailAddressField,\n  validateProfileOldPasswordInput,\n  validateProfileNewPasswordInput,\n  validateProfileConfirmPasswordInput,\n} from '@/helpers/rules'\n// REFERENCES\nconst route = useRoute()\nconst store = useStore()\nconst auth  = useAuthStore()\n// DATA\nconst fields = reactive({\n  account: [\n    {\n      label: 'Username',\n      name: 'username',\n      rules: Yup.string().required(),\n      disabled: true,\n      readonly: true,\n    },\n    {\n      label: 'First name',\n      name: 'first_name',\n      rules: validateFirstNameField,\n      disabled: false,\n      readonly: false\n    },\n    {\n      label: 'Last name',\n      name: 'last_name',\n      rules: validateLastNameField,\n      disabled: false,\n      readonly: false\n    },\n    {\n      label: 'Email',\n      name: 'email',\n      rules: validateEmailAddressField,\n      disabled: false,\n      readonly: false\n    },\n    {\n      label: 'Student number',\n      name: 'student_no',\n      rules: Yup.string().required(),\n      disabled: true,\n      readonly: true\n    },\n  ],\n  password: [\n    {\n      label: 'Old password',\n      type: 'password',\n      name: 'old_password',\n      rules: validateProfileOldPasswordInput.label('Old password')\n    },{\n      label: 'New password',\n      type: 'password',\n      name: 'temp_password',\n      rules: validateProfileNewPasswordInput.label('New password')\n    },{\n      label: 'Confirm new password',\n      type: 'password',\n      name: 'confirm_password',\n      rules: validateProfileConfirmPasswordInput.label('Confirm password')\n    },\n  ]\n})\n// COMPUTED\nconst loading       = computed(() => store.isLoading)\nconst error         = computed(() => store.isError)\nconst currentUser   = computed(() => auth.getCurrentUser)\n</script>\n\n<template>\n  <PageHeading v-if=\"route.meta\" :settings=\"route.meta\" />\n\n  <UserForm v-if=\"currentUser\" :initial-state=\"currentUser\" v-slot=\"{ values, errors, meta, isSubmitting }\">\n    <CustomInputField type=\"hidden\" name=\"_method\" value=\"PUT\" />\n    <div class=\"form-section\">\n      <SectionTitle title=\"Your Account\" />\n      <SectionSubtitle subtitle=\"Update your iPeer profile\" :icon=\"{src: IconUser, size: '3.5rem'}\">\n        <p>Your first name and last name are shown to peers when they review you but not when they read reviews from you. No one other than your instructor and teaching assistants will know what you share about peers in iPeer.</p>\n      </SectionSubtitle>\n      <div class=\"your-account\">\n        <CustomInputField\n            v-for=\"{ name, label, ...attrs } of fields.account\" :key=\"name\"\n            class=\"profile\"\n            :label=\"label\"\n            :name=\"`data[User][${name}]`\"\n            :value=\"values[name]\"\n            v-bind=\"attrs\"\n        >\n          {{ field.children }}/{{ field.name }}\n        </CustomInputField>\n      </div>\n    </div>\n    <div class=\"form-section\">\n      <SectionTitle title=\"Your Password\" />\n      <SectionSubtitle subtitle=\"Change your iPeer password\" :icon=\"{src: IconKey, size: '3.5rem'}\">\n        <p>Enter this information if you'd like to change your password. You can save updates to your account without changing your password.</p>\n      </SectionSubtitle>\n      <div class=\"your-password\">\n        <CustomInputField\n            v-for=\"{ name, label, ...attrs } of fields.password\" :key=\"name\"\n            class=\"profile\"\n            :label=\"label\"\n            :name=\"`data[User][${name}]`\"\n            :value=\"values[name]\"\n            v-bind=\"attrs\"\n        />\n      </div>\n    </div>\n    <div class=\"form-action cta\">\n      <button\n          type=\"submit\"\n          class=\"button primary min-w-[100px]\"\n          :disabled=\"!meta.valid === meta.touched || isSubmitting\">\n        <IconSpinner class=\"w-4 h-4\" v-if=\"isSubmitting\" /> Save\n      </button>\n    </div>\n  </UserForm>\n</template>\n<!--          class=\"button primary min-w-[100px] flex justify-center items-center space-x-2\"-->\n"],"names":["_hoisted_1","_createElementVNode","_hoisted_3","_sfc_render","_ctx","_cache","auth","useAuthStore","ref","values","errors","meta","handleSubmit","isSubmitting","useForm","props","onInvalidateSubmit","results","fieldName","fieldElement","_a","onSubmit","profileSearchParams","pair","route","useRoute","store","useStore","fields","reactive","Yup.string","validateFirstNameField","validateLastNameField","validateEmailAddressField","validateProfileOldPasswordInput","validateProfileNewPasswordInput","validateProfileConfirmPasswordInput","computed","currentUser"],"mappings":"ioBACUA,GAAO,CAAC,GAAA,QAAoB,QAAkC,mDAEuPC,EAAA,IAAA,CAAA,GAAA,MAAA,EAAA,CAApSA,EAAA,WAAA,CAAC,KAAM,OAAgB,OAAA,eAAuB,yBAAwB,kBAAiB,QAAM,oBAAgB,KAAC,eAAoL,2LACnSA,EAAA,SAAA,CAAC,GAAG,UAAU,GAAU,UAAC,EAAA,SAAY,KAAM,OAAgB,OAAA,eAAuB,yBAAwB,kBAAiB,QAAM,oBAAgB,0BACpJA,EAAA,OAAA,CAAC,KAAM,OAAgB,OAAA,eAAuB,yBAAwB,kBAAiB,QAAM,oBAAgB,KAAC,eAAuL,mMACpTC,GAAA,KALN,SAAAC,GAAAC,EAAAC,EAAA,+DCAQL,GAAO,CAAC,GAAA,QAAoB,QAAkC,mDAE2IC,EAAA,IAAA,CAAA,GAAA,MAAA,EAAA,CAA5LA,EAAA,OAAA,CAAC,KAAM,OAAgB,OAAA,eAAuB,yBAAwB,kBAAgB,QAAC,eAAmG,0GAC1LA,EAAA,OAAA,CAAC,KAAM,OAAgB,OAAA,eAAwB,kBAAgB,QAAC,eAA2J,uKAC1OC,GAAA,KAJN,SAAAC,GAAAC,EAAAC,EAAA,wICUIC,EAAUC,IAEAC,EAAI,IAAI,EAExB,KAAM,CAAE,OAAAC,EAAQ,OAAAC,EAAQ,KAAAC,EAAM,aAAAC,EAAc,aAAAC,GAAiBC,EAAQ,CACnE,cAAeC,EAAM,YAAA,CACtB,EAED,SAASC,EAAmB,CAAE,OAAAP,EAAQ,OAAAC,EAAQ,QAAAO,GAAgB,OAC5D,MAAMC,EAAY,OAAO,KAAKR,CAAM,EAAE,GAChCS,EAAe,SAAS,eAAeD,CAAS,GACtDE,EAAAD,GAAA,YAAAA,EAAc,QAAd,MAAAC,EAAA,KAAAD,GACAA,GAAA,MAAAA,EAAc,eAAe,CAAE,SAAU,QAAU,EACrD,CACM,MAAAE,EAAWT,EAAa,MAAOH,GAAoB,OACjD,MAAAa,EAA2B,IAAI,gBACrC,UAAWC,KAAQ,OAAO,QAAQd,CAAM,EACnCc,EAAK,KAAO,OACOD,EAAA,OAAOC,EAAK,GAAI,EAAE,EAEtCD,EAAoB,OAAOC,EAAK,GAAIA,EAAK,EAAE,EAG/C,MAAMjB,EAAK,mBAAkBc,EAAAL,EAAM,eAAN,YAAAK,EAAoB,GAAIE,CAAmB,GAEvEN,CAAkB,gzBCfrB,MAAMQ,EAAQC,IACRC,EAAQC,IACRrB,EAAQC,IAERqB,EAASC,EAAS,CACtB,QAAS,CACP,CACE,MAAO,WACP,KAAM,WACN,MAAOC,EAAW,EAAE,SAAS,EAC7B,SAAU,GACV,SAAU,EACZ,EACA,CACE,MAAO,aACP,KAAM,aACN,MAAOC,EACP,SAAU,GACV,SAAU,EACZ,EACA,CACE,MAAO,YACP,KAAM,YACN,MAAOC,EACP,SAAU,GACV,SAAU,EACZ,EACA,CACE,MAAO,QACP,KAAM,QACN,MAAOC,EACP,SAAU,GACV,SAAU,EACZ,EACA,CACE,MAAO,iBACP,KAAM,aACN,MAAOH,EAAW,EAAE,SAAS,EAC7B,SAAU,GACV,SAAU,EACZ,CACF,EACA,SAAU,CACR,CACE,MAAO,eACP,KAAM,WACN,KAAM,eACN,MAAOI,EAAgC,MAAM,cAAc,CAC7D,EAAE,CACA,MAAO,eACP,KAAM,WACN,KAAM,gBACN,MAAOC,EAAgC,MAAM,cAAc,CAC7D,EAAE,CACA,MAAO,uBACP,KAAM,WACN,KAAM,mBACN,MAAOC,EAAoC,MAAM,kBAAkB,CACrE,CACF,CAAA,CACD,EAEqBC,EAAS,IAAMX,EAAM,SAAS,EAC9BW,EAAS,IAAMX,EAAM,OAAO,EAClD,MAAMY,EAAgBD,EAAS,IAAM/B,EAAK,cAAc"}