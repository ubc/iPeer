{"version":3,"file":"PeerMixedLikertQuestion.js","sources":["../../../vueapp/src/student/views/questions/PeerMixedLikertQuestion.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { ref, toRef, reactive, watch, computed, onMounted } from 'vue'\nimport { isEmpty, find } from 'lodash'\nimport { validateLikert } from '@/helpers/rules'\nimport UserCard from '@/student/components/UserCard.vue'\nimport CustomHiddenField from '@/components/fields/CustomHiddenField.vue'\nimport CustomRadioField from '@/components/fields/CustomRadioField.vue'\nimport type { IUser, IEvaluation, IMixedResponse, IMixedReviewData } from '@/types/typings'\n// REFERENCES\nconst emit = defineEmits<{\n  (e: 'update:initialState', value: object): void\n}>()\nconst props = defineProps<{\n  members: IUser[],\n  evaluation: IEvaluation\n  question: IMixedReviewData,\n  initialState: IMixedResponse,\n  autosave?: object\n}>()\n// DATA\nconst members = toRef(props, 'members')\nconst question = toRef(props, 'question')\nconst initialState = toRef(props, 'initialState')\n// COMPUTED\n// METHODS\nfunction calcGradeAndRoundUp(multiplier: string, loms_count: number, zero_mark: string, scale_level: string) {\n  const precision = Math.pow(10, 1)\n  const score = parseInt(multiplier) / (loms_count - parseInt(zero_mark)) * parseInt(scale_level)\n  const grade = Math.floor(score * precision) / precision\n  return `(${grade} mark${grade > 1 ? 's' : ''})`\n}\n\nfunction getResponseDetails(member_id:string, question_num:string): string|number {\n  if(initialState.value?.data || !isEmpty(initialState.value?.data)) {\n    const response = find(initialState.value?.data, { evaluatee: member_id })\n    if(response?.details) {\n      const question = find(response.details, { question_number: question_num })\n      return question ? question?.selected_lom : ''\n    }\n  }\n  return 0\n}\n// WATCH\n// LIFECYCLE\n</script>\n\n<template>\n  <div :class=\"`datatable question_${question.question_num}`\">\n    <div class=\"question\">{{ question.question_num }}. {{ question.title }} <span class=\"text-red-500\" v-if=\"question.required\">*</span></div>\n    <div class=\"description\">{{ question.instructions }}</div>\n    <table class=\"standardtable center no-v-line\">\n      <thead>\n      <tr>\n        <th style=\"width: 20%\">\n          <div class=\"flex flex-col\">\n            <div class=\"\">Peer</div>\n            <small class=\"small\"></small>\n          </div>\n        </th>\n        <th :style=\"'width: '+ 80/props.question?.loms.length +'%; text-align: center'\" v-for=\"(lom, lomIdx) of props.question?.loms\" :key=\"lom.id\">\n          <div class=\"flex flex-col\">\n            <div class=\"\">{{ lom.descriptor }}</div>\n            <small class=\"small\" v-if=\"parseInt(props.question?.show_marks)\">\n              {{ calcGradeAndRoundUp(question?.multiplier, question?.loms.length, evaluation?.mixed?.zero_mark, lom?.scale_level) }}\n            </small>\n          </div>\n        </th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"(member, memberIdx) of members\" :key=\"member.id\">\n        <CustomHiddenField\n            :name=\"'data['+member?.id+'][EvaluationMixeval]['+question?.question_num+'][selected_lom]'\"\n            :value=\"getResponseDetails(member?.id, question?.question_num)\"\n        />\n        <td><UserCard :member=\"member\" /></td>\n        <td style=\"text-align: center\" v-for=\"lom of question?.loms\" :key=\"lom?.id\" :class=\"{'has-error': !!error}\">\n          <CustomRadioField\n              :name=\"'data['+member?.id+'][EvaluationMixeval]['+question?.question_num+'][grade]'\"\n              :value=\"lom?.scale_level\"\n              :rules=\"question?.required ? validateLikert : null\"\n              :checked=\"getResponseDetails(member?.id, question?.question_num)\"\n              @change=\"$emit('update:initialState', {\n                member_id: member?.id,\n                question_num: question?.question_num,\n                event: {\n                  key: 'selected_lom',\n                  value: $event.target.value\n                }\n              })\"\n          />\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n"],"names":["members","toRef","props","question","initialState","calcGradeAndRoundUp","multiplier","loms_count","zero_mark","scale_level","precision","score","grade","getResponseDetails","member_id","question_num","_a","isEmpty","_b","response","find","_c"],"mappings":"g4BAoBMA,EAAUC,EAAMC,EAAO,SAAS,EAChCC,EAAWF,EAAMC,EAAO,UAAU,EAClCE,EAAeH,EAAMC,EAAO,cAAc,EAGhD,SAASG,EAAoBC,EAAoBC,EAAoBC,EAAmBC,EAAqB,CAC3G,MAAMC,EAAY,KAAK,IAAI,GAAI,CAAC,EAC1BC,EAAQ,SAASL,CAAU,GAAKC,EAAa,SAASC,CAAS,GAAK,SAASC,CAAW,EACxFG,EAAQ,KAAK,MAAMD,EAAQD,CAAS,EAAIA,EAC9C,MAAO,IAAIE,SAAaA,EAAQ,EAAI,IAAM,KAC5C,CAES,SAAAC,EAAmBC,EAAkBC,EAAoC,WAC7E,KAAAC,EAAAZ,EAAa,QAAb,YAAAY,EAAoB,OAAQ,CAACC,mBAAQC,EAAAd,EAAa,QAAb,YAAAc,EAAoB,IAAI,EAAG,CAC3D,MAAAC,EAAWC,gBAAKC,EAAAjB,EAAa,QAAb,YAAAiB,EAAoB,KAAM,CAAE,UAAWP,EAAW,EACxE,GAAGK,GAAA,MAAAA,EAAU,QAAS,CACpB,MAAMhB,EAAWiB,EAAAA,QAAAA,KAAKD,EAAS,QAAS,CAAE,gBAAiBJ,EAAc,EAClEZ,OAAAA,EAAWA,GAAAA,YAAAA,EAAU,aAAe,EAC7C,CACF,CACO,MAAA,EACT"}