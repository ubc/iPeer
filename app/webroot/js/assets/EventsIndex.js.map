{"version":3,"mappings":"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","names":["_hoisted_1","_createElementVNode","_hoisted_3","sort","reactive","key","column","direction","emit","Row","defineAsyncComponent","loading","ref","error","columns","shallowRef","entries","filteredEntries","computed","isEmpty","newEntries","compareEntries","emitSortBy","event","response","api","_a","_b","err","toRef","name","props","inputValue","useField","elementRef","defaultValue","validationListeners","handleChange","e","errorMessage","autosize","onBeforeUnmount","selected","filter","limit_options","filterEntries","paginateEntries","paginate","options","unique","b","x","updateData","dataValue","targetKey","checked","index","value","onMounted"],"sources":["../../../vueapp/src/components/icons/IconCheckedBox.vue","../../../vueapp/src/components/icons/IconNotepad.vue","../../../vueapp/src/components/icons/IconLeftArrow.vue","../../../vueapp/src/components/icons/IconRightArrow.vue","../../../vueapp/src/student/components/tables/datatable/Table.vue","../../../vueapp/src/student/components/tables/CurrentWork.vue","../../../vueapp/src/components/Pagination.vue","../../../vueapp/src/components/fields/CustomCheckField.vue","../../../vueapp/src/components/fields/CustomSelectField.vue","../../../vueapp/src/student/components/TimeFrame.vue","../../../vueapp/src/student/components/tables/CompletedWork.vue","../../../vueapp/src/pages/EventsIndex.vue"],"sourcesContent":["<template>\n  <svg id=\"emoji\" viewBox=\"0 0 72 72\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g id=\"line\">\n      <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M51.2308,14.778c-15.2308,18-18,30.4615-18,30.4615s-2.7692-6.9231-5.5385-9.6923\"/>\n      <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M45,29.0772V50.318c0,0.2541-0.2059,0.46-0.46,0.46H22.46c-0.254,0-0.46-0.2059-0.46-0.46v-22.08c0-0.254,0.2059-0.46,0.46-0.46 h13.9961h0.3953\"/>\n    </g>\n  </svg>\n</template>","<template>\n  <svg id=\"emoji\" viewBox=\"0 0 72 72\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g id=\"line\">\n      <line x1=\"45.4806\" x2=\"45.4806\" y1=\"13.9548\" y2=\"19.5906\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"40.7203\" x2=\"40.7203\" y1=\"13.9548\" y2=\"19.5906\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"35.96\" x2=\"35.96\" y1=\"13.9548\" y2=\"19.5906\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"50.2408\" x2=\"50.2408\" y1=\"13.9548\" y2=\"19.5906\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"31.1997\" x2=\"31.1997\" y1=\"13.9548\" y2=\"19.5906\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"26.4394\" x2=\"26.4394\" y1=\"13.9548\" y2=\"19.5906\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"21.6792\" x2=\"21.6792\" y1=\"13.9548\" y2=\"19.5906\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"16.9896\" x2=\"54.7874\" y1=\"29.3515\" y2=\"29.3515\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"16.9896\" x2=\"54.7874\" y1=\"39.8249\" y2=\"39.8249\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"16.9896\" x2=\"39.115\" y1=\"50.2984\" y2=\"50.2984\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"25.9463\" x2=\"25.9463\" y1=\"24.4434\" y2=\"55.5488\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <polyline fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" points=\"54.3253,16.9734 59.96,16.9734 59.997,48.0382 43.6564,60.0864 11.997,60.0918 11.96,16.9734 17.5992,16.9734\"/>\n      <polyline fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" points=\"59.7462,48.0382 43.1384,48.0382 43.1384,53.5175\"/>\n    </g>\n  </svg>\n</template>","<template>\n  <svg id=\"emoji\" viewBox=\"0 0 72 72\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g id=\"line\">\n      <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M41,55l-18.7948-9.1111l-15.817-7.6675c-1.8509-0.8972-1.8509-3.5456,0-4.4428l15.817-7.6675L41,17\"/>\n      <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M67,55l-18.8824-9.1111l-15.8908-7.6675c-1.8595-0.8972-1.8595-3.5456,0-4.4428l15.8908-7.6675L67,17\"/>\n    </g>\n  </svg>\n</template>","<template>\n  <svg id=\"emoji\" viewBox=\"0 0 72 72\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g id=\"line\">\n      <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M31,17l18.7948,9.1111l15.817,7.6675c1.8509,0.8972,1.8509,3.5456,0,4.4428l-15.817,7.6675L31,55\"/>\n      <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M5,17l18.8824,9.1111l15.8908,7.6675c1.8595,0.8972,1.8595,3.5456,0,4.4428L23.8824,45.889L5,55\"/>\n    </g>\n  </svg>\n</template>","<script lang=\"ts\" setup>\nimport { reactive } from 'vue';\n// REFERENCES\nconst emit = defineEmits<{\n  (e: 'update:sort', option: object): void\n}>()\nconst props = defineProps<{\n  columns: object[]\n}>()\n// DATA\nconst sort = reactive({\n  key: 'event',\n  column: 'id',\n  direction: 'asc'\n})\n// COMPUTED\n// METHODS\nfunction handleSortBy(key: string, column: string, direction: string) {\n  sort.key = key\n  sort.column = column\n  sort.direction = direction\n  emit('update:sort', sort)\n}\n// WATCH\n// LIFECYCLE\n</script>\n\n<template>\n  <table class=\"standardtable leftalignedtable\">\n    <thead>\n    <tr>\n      <th v-for=\"(column, index) of columns\" :key=\"column.id\" :data-index=\"index\" :style=\"{width: column.width}\">\n        <div class=\"flex justify-between items-center space-x-4\">\n          <span>{{ column.name }}</span>\n          <svg class=\"w-5 h-5 cursor-pointer text-slate-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"\n               @click=\"handleSortBy(column.key, column.value, sort.direction === 'asc' ? 'desc' : 'asc')\">\n            <path v-if=\"column.sortable && sort.column !== column.value\"\n                  stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l4-4 4 4m0 6l-4 4-4-4\"></path>\n            <path v-else-if=\"column.sortable && sort.direction === 'desc' && sort.key === column.key\"\n                  stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 4h13M3 8h9m-9 4h6m4 0l4-4m0 0l4 4m-4-4v12\"></path>\n            <path v-else-if=\"column.sortable && sort.direction === 'asc' && sort.key === column.key\"\n                  stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 4h13M3 8h9m-9 4h9m5-4v12m0 0l-4-4m4 4l4-4\"></path>\n          </svg>\n        </div>\n      </th>\n    </tr>\n    </thead>\n    <tbody><slot /></tbody>\n  </table>\n</template>\n","<script lang=\"ts\" setup>\nimport { ref, shallowRef, reactive, computed, onMounted, defineAsyncComponent } from 'vue'\nimport { isEmpty } from 'lodash'\nimport api from '@/services/api'\nimport { compareEntries } from '@/helpers'\nimport { Table } from '@/student/components/tables/datatable'\nimport Loader from \"@/components/Loader.vue\";\nimport ErrorComponent from '@/components/ErrorComponent.vue'\n\nimport type { IUser, IEvent } from '@/types/typings'\n// import type { IUser, IEvent, ICourse, IGroup, IPenalty } from '@/types/typings'\n// interface IEventProps {\n//   event: IEvent\n//   course: ICourse\n//   group: IGroup\n//   penalties: IPenalty[]\n//   late: boolean\n//   percent_penalty: string\n// }\n// interface ICurrentWork {\n//   current: IEventProps[]\n// }\n// interface ICompletedWork {\n//   completed: IEventProps[]\n// }\n// interface IData {\n//   current: ICurrentWork\n//   completed: ICompletedWork\n// }\n// interface IHttpResponse {\n//   data: IData\n// }\n\nconst Row = defineAsyncComponent({\n  loader: () => import('@/student/components/tables/current/Row.vue'),\n  LoadingComponent: '<div>Loading...</div>',\n  suspensible: false,\n  delay: 2000\n})\n// REFERENCES\nconst emit = defineEmits<{}>()\nconst props = defineProps<{\n  currentUser: IUser\n}>()\n// DATA\nconst loading = ref<boolean>(false)\nconst error   = ref<object | null>(null)\nconst columns = shallowRef<object[]>([\n  {id: 1, key: 'event', value: 'title', name: 'Work', sortable: true, width: '30%'},\n  {id: 2, key: 'course', value: 'course', name: 'Course', sortable: true, width: '23%'},\n  {id: 3, key: 'event', value: 'due_date', name: 'Due', sortable: true, width: '30%'},\n  {id: 4, key: 'action', value: '', name: 'Action', sortable: false, width: '17%'},\n])\nconst entries = ref<object[]>([])\nconst sort = reactive({\n  key: 'event',\n  column: 'id',\n  direction: 'asc'\n})\n// COMPUTED\nconst filteredEntries = computed(() => {\n  let newEntries = entries.value || []\n  if(!isEmpty(newEntries) && Array.isArray(newEntries)) { // newEntries instanceof Array\n    newEntries = newEntries?.sort(compareEntries(sort.key, sort.column, sort.direction))\n  }\n  return newEntries\n})\n// METHODS\nfunction emitSortBy(event) {\n  Object.assign(sort, event)\n}\n// WATCH\n// LIFECYCLE\nonMounted(async () => {\n  loading.value = true\n  try {\n    const response: Promise<unknown> = await api.get('/home', '?work=current')\n    if(response.status === 200 && response.statusText === 'OK') {\n      entries.value = response?.data?.data\n    } else {\n      error.value = {text: response?.data?.message, type: 'error'}\n    }\n  } catch (err: Error | any) {\n    error.value = {text: err?.message, type: 'error'};\n  } finally {\n    loading.value = false\n  }\n})\n</script>\n\n<template>\n  <div class=\"current-work mx-4 my-8\">\n    <ErrorComponent v-if=\"error\" class=\"current error\" :error=\"error\" />\n    <Table :error=\"error\" :columns=\"columns\" @update:sort=\"emitSortBy\">\n      <tr v-if=\"loading\">\n        <td :colspan=\"columns.length\"><Loader height=\"200px\" /></td>\n      </tr>\n      <tr v-else-if=\"!loading && isEmpty(filteredEntries)\">\n        <td :colspan=\"columns.length\"><div class=\"flex justify-center items-center p-8\">No Content found!</div></td>\n      </tr>\n      <template v-else-if=\"!loading && !isEmpty(filteredEntries)\">\n        <Row v-for=\"(row, index) of filteredEntries\" :key=\"`${index}_${row?.event?.id}`\" :data-index=\"index\" :row=\"row\" />\n      </template>\n    </Table>\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport { toRef } from 'vue';\nimport { IconLeftArrow, IconRightArrow } from '@/components/icons'\n// REFERENCES\nconst emit = defineEmits<{\n  (e: 'update:paginate', option: object): void\n}>()\nconst props = defineProps<{\n  paginate: object\n}>()\n// DATA\nconst paginate = toRef(props, 'paginate')\n// COMPUTED\n// METHODS\n// WATCH\n// LIFECYCLE\n</script>\n\n<!--// Displaying 1 - 5 of 5  -->\n<template>\n  <div class=\"pagination flex justify-between items-center text-sm text-slate-700 leading-relaxed mt-4\">\n    <div class=\"displaying text-slate-700\">\n      Displaying {{ paginate.offset+1 }}\n      - {{ Number(paginate.end) > paginate.total ? paginate.total : paginate.end }}\n      of {{ paginate.total }}\n    </div>\n    <div class=\"paginate text-slate-700\">\n      <ul class=\"flex space-x-1.5\">\n        <li>\n          <button :class=\"`paginate ${paginate.page === 1 ? 'disabled' : ''}`\"\n              :disabled=\"paginate.page === 1\"\n              @click=\"paginate.page--\"><IconLeftArrow class=\"w-4 h-4\" /></button>\n        </li>\n        <li v-for=\"(_, index) of paginate.pages\" :key=\"index\">\n          <button :class=\"`paginate ${paginate.page === (index+1) ? 'active' : ''}`\"\n              @click=\"paginate.page = (index + 1)\">{{ index + 1 }}</button>\n        </li>\n        <li>\n          <button :class=\"`paginate ${paginate.page === paginate.pages ? 'disabled' : ''}`\"\n              :disabled=\"paginate.page === paginate.pages\"\n              @click=\"paginate.page++\"><IconRightArrow class=\"w-4 h-4\" /></button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport {ref, reactive, watch, computed, onMounted, toRef} from 'vue';\nimport { useField, Field } from 'vee-validate'\n// REFERENCES\nconst emit = defineEmits<{\n  (e: 'update:modelValue', option: string): void\n  (e: 'update:event', option: string): void\n}>()\nconst props = defineProps<{\n  label?: string\n  name: string\n  value?: string\n  modelValue?: string | number\n  rules?: string\n}>()\n\n// DATA\nconst name = toRef(props, 'name');\n// COMPUTED\nconst { checked, handleChange, errorMessage, handleBlur, meta } = useField(name, props.rules, {\n  type: 'checkbox',\n  checkedValue: props.value,  // true\n  uncheckedValue: null,       // false\n  validateOnValueUpdate: true\n})\nconst validationListeners = {\n  blur: handleChange,\n  change: handleChange,\n  input: (e: unknown) => handleChange(e, !!errorMessage.value)\n}\n// METHODS\n// WATCH\n// LIFECYCLE\n</script>\n\n<template>\n  <label class=\"space-x-2\">\n    <input\n        type=\"checkbox\"\n        class=\"text-sm\"\n        :name=\"name\"\n        :value=\"modelValue\"\n        :data-value=\"value\"\n        @change=\"$emit('update:event', $event)\"\n        @input=\"handleChange\"\n        @blur=\"handleBlur\"\n    />\n    <span class=\"text-sm\" v-if=\"label\">{{ label }}</span>\n  </label>\n</template>\n","<script lang=\"ts\" setup>\nimport {ref, reactive, watch, computed, onMounted, toRef, onBeforeUnmount} from 'vue';\nimport { Field, ErrorMessage, useField } from 'vee-validate'\nimport autosize from 'autosize'\n\n// REFERENCES\nconst emit = defineEmits<{\n  (e: 'update:modelValue', option: string): void\n  (e: 'update:event', option: string): void\n}>()\ninterface Props {\n  label?: string\n  name: string\n  value?: null\n  modelValue?: null\n  rules?: string|object\n  default?: string\n  disabled?: boolean\n}\nconst props = withDefaults(defineProps<Props>(), {\n  disabled: false,\n  rules: undefined\n})\nconst name        = toRef(props, 'name');\nconst { value: inputValue, handleChange, errorMessage, handleBlur, meta } = useField(name, props.rules, {\n  type: props.type,\n  initialValue: props.value,\n  validateOnValueUpdate: false\n});\n// DATA\nconst elementRef  = ref()\nconst defaultValue = ref(props.default)\nconst validationListeners = {\n  blur: handleChange,\n  change: handleChange,\n  input: (e: unknown) => handleChange(e, !!errorMessage.value)\n}\n// COMPUTED\n// METHODS\n// WATCH\n// LIFECYCLE\nonMounted(() => autosize(elementRef.value))\nonBeforeUnmount(() => autosize.destroy(elementRef.value))\n</script>\n\n<template>\n  <label class=\"form-select\" :class=\"{ 'has-error': !!errorMessage, success: meta.valid }\">\n    <span class=\"form-select-label\" v-if=\"label\">{{ label }}</span>\n    <select\n        class=\"form-select-input\"\n        :id=\"name\"\n        :name=\"name\"\n        :disabled=\"props.disabled\"\n        @change=\"$emit('update:event', $event)\"\n        @input=\"handleChange\"\n        v-on=\"validationListeners\"\n        v-bind=\"$attrs\"\n    >\n      <option v-if=\"defaultValue\" :value=\"defaultValue\">{{ defaultValue }}</option>\n      <slot />\n    </select>\n    <ErrorMessage class=\"form-text text-muted\" :name=\"name\" />\n  </label>\n</template>\n","<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport CustomSelectField from '@/components/fields/CustomSelectField.vue'\n\ninterface Props {\n  default?: string,\n  label?: string\n  name: string\n  options?: string[]\n  modelValue?: string | number\n}\n// REFERENCES\nconst emit = defineEmits<{\n  (e: 'update:event', option: string): void\n}>()\nconst props = defineProps<Props>()\n// DATA\nconst selected = computed(() => props.default ? props.default : props.options?.length > 0 ? props.options[0] : null)\n// COMPUTED\n// METHODS\n// WATCH\n// LIFECYCLE\n</script>\n\n<template>\n  <div class=\"timeframe flex flex-col items-center md:flex-row md:space-x-12\">\n    <div class=\"label\">Timeframe: </div>\n    <CustomSelectField :disabled=\"props.options?.length===0\" :default=\"props.default\" :name=\"props.name\" @update:event=\"$emit('update:event', $event)\">\n      <option v-for=\"(option, index) of props.options\" :key=\"index\" :value=\"option\" :selected=\"option===selected\">{{ option }}</option>\n    </CustomSelectField>\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport {ref, shallowRef, reactive, computed, onMounted, defineAsyncComponent, watch} from 'vue';\nimport { isEmpty } from 'lodash'\nimport useFetch from '@/composables/useFetch'\nimport { compareEntries, filterEntries, paginateEntries, unique } from '@/helpers'\n\nimport ErrorComponent from '@/components/ErrorComponent.vue'\nimport Loader from '@/components/Loader.vue'\nimport Pagination from '@/components/Pagination.vue'\nimport LimitTo from '@/student/components/LimitTo.vue'\nimport TimeFrame from '@/student/components/TimeFrame.vue'\nimport { Table } from '@/student/components/tables/datatable'\n\nimport type { User } from '@/types/typings'\nimport api from \"@/services/api\";\n\nconst Row = defineAsyncComponent({\n  loader: () => import('@/student/components/tables/completed/Row.vue'),\n  LoadingComponent: 'Loading...',\n  suspensible: false,\n  delay: 2000\n})\n// REFERENCES\nconst emit = defineEmits<{\n  // (e: 'update:modelValue', option: string): void\n}>()\nconst props = defineProps<{\n currentUser: User\n}>()\n// DATA\nconst loading = ref<boolean>(false)\nconst error   = ref<object | null>(null)\nconst columns = shallowRef<object>([\n  {id: 1, key: 'event', value: 'title', name: 'Work', sortable: true, width: '30%'},\n  {id: 2, key: 'event', value: 'record_status', name: 'Your Status', sortable: true, width: '18%'},\n  {id: 3, key: 'course', value: 'course', name: 'Course', sortable: true, width: '17.5%'},\n  {id: 4, key: 'event', value: 'due_date', name: 'Due', sortable: true, width: '17.5%'},\n  {id: 5, key: 'action', value: '', name: 'Action', sortable: false, width: '17%'},\n])\nconst entries = ref<object[]>([])\nconst sort = reactive({\n  key: 'event',\n  column: 'id',\n  direction: 'asc'\n})\nconst filter = reactive({\n  timeframe: 'all',\n  limit: [],\n  search: '', // TODO:: would be part of the admin/instructor list\n})\nconst limit_options = shallowRef([\n  {\n    name: 'limit',\n    value: 'can_edit',\n    label: 'Work I can still edit',\n  },{\n    name: 'limit',\n    value: 'can_view',\n    label: 'Peer reviews of me I can see',\n  }\n])\n// COMPUTED\nconst filteredEntries = computed(() => {\n  let newEntries = entries.value || []\n  if(!isEmpty(newEntries) && Array.isArray(newEntries)) { // newEntries instanceof Array\n    newEntries = newEntries?.sort(compareEntries(sort.key, sort.column, sort.direction))\n    newEntries = Object.entries(filter) ? filterEntries(newEntries, filter) : newEntries\n    newEntries = paginateEntries(newEntries, paginate.offset, paginate.end)\n    return newEntries\n  }\n  return newEntries\n})\nconst options   = computed(() => unique(entries.value, 'course', 'term').sort((a,b) => a.localeCompare(b)).filter(x=>x))\nconst paginate  = reactive({\n  page: 1,\n  limit: 5,\n  total: computed(() => entries.value?.length),\n  pages: computed<number>(() => Math.ceil(entries.value?.length / Number(paginate.limit)) || 1),\n  offset: computed<number>(() => (Number(paginate.page) * Number(paginate.limit) - Number(paginate.limit))), // start\n  end: computed<number>(() => Number(paginate.offset) + Number(paginate.limit))\n})\n// METHODS\nfunction emitSortBy(event) {\n  Object.assign(sort, event)\n}\nfunction updateData(event: HTMLInputElement | any) {\n  let { name, value, checked } = event.target\n  let dataValue = event.target.dataset.value  // ['data-value']\n  if(event.target.type === 'checkbox') {\n    const targetKey: string[] = filter[name]\n    if(checked) {\n      targetKey.push(dataValue)\n    } else {\n      const index = targetKey.indexOf(dataValue)\n      targetKey.splice(index, 1)\n    }\n  } else {\n    filter[name] = value\n  }\n  if(filter.timeframe === 'all' && !event.target.checked && filter.limit.length === 0) {\n    paginate.pages = computed<number>(() => Math.ceil(entries.value?.length / Number(paginate.limit)) || 1)\n  } else {\n    paginate.pages = computed<number>(() => Math.ceil(filteredEntries.value?.length / Number(paginate.limit)) || 1)\n  }\n  paginate.page = 1\n}\n// WATCH\nwatch([ sort, filter, paginate ], () => {\n  filteredEntries.value\n}, { deep: true })\n// LIFECYCLE\nonMounted(async () => {\n  loading.value = true\n  try {\n    const response: Promise<unknown> = await api.get('/home', '?work=completed')\n    if(response.status === 200 && response.statusText === 'OK') {\n      entries.value = response.data?.data\n    } else {\n      error.value = {text: response?.data?.message, type: 'error'}\n    }\n  } catch (err: Error | any) {\n    error.value = {text: err.message, type: 'error'};\n  } finally {\n    loading.value = false\n  }\n})\n</script>\n\n<template>\n  <div class=\"completed-work mx-4 my-8\">\n    <ErrorComponent v-if=\"error\" class=\"completed error\" :error=\"error\" />\n    <div class=\"flex flex-col my-4 space-y-6\">\n      <TimeFrame :default=\"filter.timeframe\" :options=\"options\" :name=\"'timeframe'\" @update:event=\"updateData\" />\n      <LimitTo label=\"Limit To:\" :options=\"limit_options\" @update:event=\"updateData\" />\n    </div>\n    <Table :error=\"error\" :columns=\"columns\" @update:sort=\"emitSortBy\">\n      <tr v-if=\"loading\">\n        <td :colspan=\"columns.length\">\n          <Loader height=\"200px\" />\n        </td>\n      </tr>\n      <tr v-else-if=\"!loading && isEmpty(filteredEntries)\">\n        <td :colspan=\"columns.length\">\n          <div class=\"flex justify-center items-center p-8\">No Content found!</div>\n        </td>\n      </tr>\n      <template v-else-if=\"!loading && !isEmpty(filteredEntries)\">\n        <Row v-for=\"(row, index) of filteredEntries\" :key=\"`${index}_${row?.event?.id}`\" :data-index=\"index\" :row=\"row\" />\n      </template>\n    </Table>\n    <Pagination :paginate=\"paginate\" />\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport {ref} from 'vue'\nimport Loader from '@/components/Loader.vue'\nimport PageHeading from '@/components/PageHeading.vue'\nimport SectionTitle from '@/components/SectionTitle.vue'\nimport SectionSubtitle from '@/components/SectionSubtitle.vue'\nimport {IconNotepad, IconCheckedBox} from '@/components/icons'\nimport CurrentWork from '@/student/components/tables/CurrentWork.vue'\nimport CompletedWork from '@/student/components/tables/CompletedWork.vue'\nimport type { IUser, IPageHeading } from '@/types/typings'\n// REFERENCES\nconst emit = defineEmits<{}>()\nconst props = defineProps<{\n  currentUser: IUser\n  settings: IPageHeading\n}>()\n// DATA\nconst error = ref<object | null>(null)\n// COMPUTED\n// METHODS\n// WATCH\n// LIFECYCLE\n</script>\n\n<template>\n  <div class=\"events to layout\">\n    <PageHeading :settings=\"props.settings\" />\n    <section class=\"current-work\">\n      <SectionTitle title=\"Current Work To Do\" />\n      <SectionSubtitle subtitle=\"Do the work assigned to you\" :icon=\"{src: IconCheckedBox, size: '3.5rem'}\">\n        <p class=\"mx-4\">Instructors will set specific timeframes for reviewing your group. When work is available, it will appear here until you complete it or the final due date passes.</p>\n      </SectionSubtitle>\n\n      <Suspense>\n        <template #default>\n          <CurrentWork :current-user=\"props.currentUser\" />\n        </template>\n        <template #fallback>\n          <Loader />\n        </template>\n      </Suspense>\n    </section>\n    <section class=\"completed-work\">\n      <SectionTitle title=\"Closed or Completed Work\"></SectionTitle>\n      <SectionSubtitle subtitle=\"See past work and reviews of your teamwork\" :icon=\"{src: IconNotepad, size: '3.25rem'}\">\n        <p class=\"mx-4\">Below you can find previously assigned work that you have completed or that has closed. After a peer review closes, your instructor may or may not let you see how your peers evaluated you. If any reviews of you are available, they will be linked below.</p>\n      </SectionSubtitle>\n\n      <Suspense>\n        <template #default>\n          <CompletedWork :current-user=\"props.currentUser\" />\n        </template>\n        <template #fallback>\n          <Loader />\n        </template>\n      </Suspense>\n    </section>\n  </div>\n</template>\n"],"file":"js/assets/EventsIndex.js"}