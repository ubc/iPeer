{"version":3,"file":"evaluation.js","sources":["../../../vueapp/src/stores/evaluation.ts"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { findIndex } from 'lodash'\nimport { useStore } from '@/stores/main'\nimport { useAuthStore } from '@/stores/auth'\nimport { useEventsStore } from '@/stores/events'\nimport api from '@/services/api'\nimport {sleep} from \"@/helpers\";\n\nimport type { IUser, IEvaluation } from '@/types/typings'\nexport const useEvaluationStore = defineStore('evaluation', {\n  state: () => ({\n    loading: false,\n    error: null as object|null,\n    evaluation: null as IEvaluation|null,\n    members: null as IUser[]|null,\n    autosave: false,\n  }),\n\n  actions: {\n    async fetchEvaluation(eventId: string, groupId: string): Promise<void> {\n      const store = useStore()\n      this.loading = true\n      this.error = null\n      this.evaluation = null\n      this.members = null\n\n      try {\n        const response = await api.get('/evaluations/makeEvaluation', `${eventId}/${groupId}`)\n        switch (response.status) {\n          case 200:\n            if(response.statusText === 'OK') {\n              this.evaluation = await response?.data?.data\n              this.members = await response?.data?.data?.members\n            } else {\n              this.error = response.data\n            }\n            break\n          case 204:\n            this.error = {\n              message: 'The following content is not available.',\n              status: response.data.status,\n              type: 'error'\n            }\n            break\n          default:\n            break\n        }\n      } catch (err: any) {\n        switch (err.response.status) {\n          case 500:\n            this.error = {message: err.response.data.message, status: err.response.status, type: 'error'}\n            break\n          case 404:\n            this.error = {message: err.message, status: err.status, type: 'error'}\n            // await this.router.push({ name: 'not.found' })\n            break\n          case 201:\n            this.error = {message: err.message.data.message, status: err.response.status, type: 'error'}\n            break\n          default:\n            break\n        }\n      } finally {\n        await sleep(1000)\n        this.loading = false\n      }\n    },\n\n    async makeEvaluation(formData: HTMLFormElement, eventId: string, groupId: string) {\n      const store = useStore()\n      const eventsStore = useEventsStore()\n      try {\n        const response = await api.post('/evaluations/makeEvaluation', `${eventId}/${groupId}`, formData)\n        if(response.status === 200 && response.statusText === 'OK') {\n          store.setNotification(response.data)\n          eventsStore.fetchEvents()\n          // @ts-ignore\n          await this.router.push({name: 'student.events'})\n        } else {\n          store.setNotification(response.data)\n        }\n      } catch (err: any) {\n        store.setNotification({ message: err.response.data.message, status: err.response.data.status, type: 'error' })\n      }\n    },\n\n    async editEvaluation(formData: HTMLFormElement, eventId: string, groupId: string) {\n      this.autosave = true\n      const store = useStore()\n      //const eventsStore = useEventsStore()\n\n      try {\n        const response = await api.post('/evaluations/makeEvaluation', `${eventId}/${groupId}`, formData)\n        if(response.status === 200 && response.statusText === 'OK') {\n          store.setNotification(response.data)\n          //eventsStore.fetchEvents()\n        } else {\n          store.setNotification(response.data)\n        }\n      } catch (err: any) {\n        store.setNotification({ message: err.response.data.message, status: err.response.data.status, type: 'error' })\n      }\n    },\n\n    async autoSaveEvaluation(formData: HTMLFormElement|any, eventId: string, groupId: string) {\n      const store = useStore()\n      this.autosave = true\n      try {\n        const response = await api.post('/evaluations/makeEvaluation', `${eventId}/${groupId}`, formData)\n        if(response.status === 200 && response.statusText === 'OK') {\n          this.autosave = false\n        }\n      } catch (err: any) {\n        store.setNotification({message: err.response.message, status: err.response.status, type: 'error'})\n      } finally {\n        this.autosave = false\n      }\n    },\n\n\n  },\n\n  getters: {\n    hasError(state) {\n      if(state.error === null) {\n        return false\n      } else {\n        return true\n      }\n    },\n    getGroupMembers(state) {\n      // check if members includes the currentUser\n      if(state.members) {\n        const auth = useAuthStore()\n        const user = auth.getCurrentUser\n        let tmp = [...state.members]\n        // @ts-ignore\n        const index = findIndex(tmp, { id: user?.id })\n        if (index === -1) {\n          return state.members\n        } else {\n          const spliced = tmp.splice(index, 1)\n          // @ts-ignore\n          return [...tmp, {...spliced[0], first_name: 'Yourself', last_name: ''}]\n        }\n      }\n      return state.members\n    }\n  }\n\n})\n"],"names":["useEvaluationStore","defineStore","eventId","groupId","useStore","response","api","_a","_c","_b","err","sleep","formData","store","eventsStore","useEventsStore","state","user","useAuthStore","tmp","index","findIndex","spliced"],"mappings":"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"}