{"version":3,"file":"InputText.js","sources":["../../../../vue-ts-ipeer/src/components/fields/InputText.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { toRef, computed } from 'vue';\nimport { useField } from 'vee-validate'\n\nexport interface Props {\n  type: string\n  label?: string\n  name: string\n  value?: string\n  rules?: string\n  disabled: boolean\n}\n// REFERENCES\nconst emit = defineEmits<{\n  // (e: 'update:modelValue', option: string): void\n}>()\nconst props = withDefaults(defineProps<Props>(), {\n  type: 'text',\n  disabled: false\n})\n\nconst name = toRef(props, 'name');\nconst { value: inputValue, errorMessage, handleBlur, handleChange, meta } = useField(name, props.rules, {\n  initialValue: props.value,\n  validateOnValueUpdate: true\n});\n// DATA\nconst validationListeners = {\n  blur: handleChange,\n  change: handleChange,\n  input: (e: unknown) => handleChange(e, !!errorMessage.value)\n}\n// COMPUTED\n// METHODS\n// WATCH\n// LIFECYCLE\n</script>\n\n<template>\n  <template v-if=\"type === 'hidden'\"><input :type=\"type\" :name=\"props.name\" v-model=\"inputValue\" /></template>\n  <template v-else-if=\"props.label\">\n    <div class=\"form-group\" :class=\"{ 'has-error': !!errorMessage, success: meta.valid }\">\n      <label class=\"form-label\" v-if=\"props.label\" :for=\"name\">{{ props.label }}</label>\n      <div class=\"form-control md:max-w-[320px]\">\n        <input v-bind=\"$attrs\"\n            class=\"form-input flex-1\"\n            :id=\"name\"\n            :type=\"props.type\"\n            :name=\"name\"\n            :value=\"inputValue\"\n            :placeholder=\"placeholder\"\n            :disabled=\"disabled\"\n            @input=\"handleChange\"\n            @blur=\"handleBlur\"\n            v-on=\"validationListeners\"\n        />\n        <span class=\"form-text text-muted\" v-if=\"errorMessage || meta.valid\">{{ errorMessage }}</span>\n      </div>\n    </div>\n  </template>\n  <label v-else-if=\"!props.label\" class=\"relative flex justify-center items-center\" :class=\"{ 'has-error': errorMessage, success: meta.valid }\">\n    <input type=\"text\"\n           class=\"form-input flex-1\"\n           :name=\"name\"\n           :value=\"inputValue\"\n           :disabled=\"disabled\"\n           @input=\"handleChange\"\n           @blur=\"handleBlur\"\n           v-on=\"validationListeners\"\n    />\n    <span class=\"form-text form-text-inline text-muted\" v-if=\"errorMessage || meta.valid\">{{ errorMessage }}</span>\n  </label>\n</template>\n\n<style lang=\"scss\" scoped>\n.has-error {\n  input {\n    @apply bg-red-50;\n    @apply z-0;\n  }\n}\n.form {\n\n  &-input {\n    @apply bg-transparent;\n    @apply z-20;\n  }\n\n  &-text {\n    &-inline {\n      @apply absolute -bottom-5 left-0;\n      @apply text-[.65rem];\n      @apply z-10;\n    }\n  }\n}\n</style>"],"names":["name","toRef","props","inputValue","errorMessage","handleBlur","handleChange","meta","useField","validationListeners","e"],"mappings":"uuBAqBMA,EAAOC,EAAMC,EAAO,MAAM,EAC1B,CAAE,MAAOC,EAAY,aAAAC,EAAc,WAAAC,EAAY,aAAAC,EAAc,KAAAC,CAAA,EAASC,EAASR,EAAME,EAAM,MAAO,CACtG,aAAcA,EAAM,MACpB,sBAAuB,EAAA,CACxB,EAEKO,EAAsB,CAC1B,KAAMH,EACN,OAAQA,EACR,MAAQI,GAAeJ,EAAaI,EAAG,CAAC,CAACN,EAAa,KAAK,CAAA"}