{"version":3,"file":"PeerMixedLikertQuestion.js","sources":["../../../../vue-ts-ipeer/src/student/views/questions/PeerMixedLikertQuestion.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { ref, toRef, reactive, watch, computed, onMounted } from 'vue'\nimport { validateLikert } from '@/helpers/rules'\nimport CustomVeeField from '@/components/fields/CustomVeeField.vue'\n\nimport UserCard from '@/student/components/UserCard.vue'\nimport { InputText, InputRadio } from \"@/components/fields\";\n\n// REFERENCES\nconst emit = defineEmits<{\n  (e: 'update:form', value: object): void\n}>()\nconst props = defineProps<{\n  question: object,\n  members: object[],\n  initialState: object,\n}>()\n\n// DATA\nconst initialState = toRef(props, 'initialState')\nconst members = toRef(props, 'members')\nconst question = toRef(props, 'question')\n\n// COMPUTED\n\n// METHODS\nfunction gradeRoundUp(num, precision) {\n  precision = Math.pow(10, precision)\n  return Math.floor(num * precision) / precision\n}\n\nconst grades = reactive({})\n\nfunction setSelectedLom(value, member_id, question_num) {\n\n  Object.assign(grades, {\n    [member_id]: value\n  })\n\n  emit('update:form', {[`selected_lom_${member_id}_${question_num}`]: value})\n}\n// WATCH\n\n// LIFECYCLE\n</script>\n\n<template>\n  <div class=\"debug\">{{ grades }}</div>\n  <table class=\"standardtable leftalignedtable\">\n    <thead>\n    <tr>\n      <th style=\"width: 20%\">\n        <div class=\"\">\n          <div class=\"font-serif font-medium\">Peer</div>\n          <small class=\"text-sm font-normal\"></small>\n        </div>\n      </th>\n      <th :style=\"'width: '+ 80/props.question?.loms.length +'%; text-align: center'\"\n          v-for=\"(lom, lomIdx) of props.question?.loms\" :key=\"lom.id\">\n        <div class=\"leading-4\">\n          <div class=\"font-medium\">{{ lom.descriptor }}</div>\n          <small class=\"text-sm font-thin\">(marks)</small>\n          <!--<small v-if=\"parseInt(props.question?.show_marks)\" class=\"text-sm font-thin\">\n            ({{ gradeRoundUp((props.question?.multiplier/props.question?.scale_level)*lom.scale_level, 1) }} mark{{ gradeRoundUp((question.multiplier/question.scale_level)*lom.scale_level, 1) > 1 ? 's' : '' }})\n          </small>-->\n        </div>\n      </th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr v-for=\"(member, memberIdx) of members\" :key=\"member.id\">\n      <InputText type=\"hidden\" :name=\"'data['+member.id+'][EvaluationMixeval]['+question.question_num+'][selected_lom]'\" :value=\"JSON.stringify(grades, null, 2)\" />\n      <td><UserCard :member=\"member\" /></td>\n      <td style=\"text-align: center\" v-for=\"lom of question.loms\" :key=\"lom.id\">\n        <CustomVeeField\n            as=\"input\"\n            type=\"radio\"\n            :name=\"'data['+member.id+'][EvaluationMixeval]['+question.question_num+'][grade]'\"\n            :checked=\"''\"\n            :rules=\"validateLikert\"\n        />\n        <!--\n        <InputRadio class=\"flex\"\n            :name=\"'data['+member.id+'][EvaluationMixeval]['+question.question_num+'][grade]'\"\n            :value=\"gradeRoundUp((question.multiplier/question.scale_level)*lom.scale_level, 1)\"\n            @update:input=\"setSelectedLom(lom.scale_level, member.id, question.question_num)\"\n            :rules=\"validateRadio\"\n        />-->\n        <!-- :checked=\"initialState['selected_lom_'+member.id+'_'+question.question_num] === lom.scale_level\"  -->\n        <!--<input\n            type=\"radio\"\n            :name=\"'data['+member.id+'][EvaluationMixeval]['+question.question_num+'][grade]'\"\n            :value=\"gradeRoundUp((question.multiplier/question.scale_level)*lom.scale_level, 1)\"\n            :checked=\"initialState['selected_lom_'+member.id+'_'+question.question_num] === lom.scale_level\"\n            @change=\"setSelectedLom(lom.scale_level, member.id, question.question_num)\"\n        />-->\n      </td>\n      <!--  :value=\"initialState['selected_lom_'+member.id+'_'+question.question_num]??''\" -->\n      <!--<input\n          type=\"hidden\"\n          :name=\"'data['+member.id+'][EvaluationMixeval]['+question.question_num+'][selected_lom]'\"\n          :value=\"initialState['selected_lom_'+member.id+'_'+question.question_num]??''\"\n      >-->\n    </tr>\n    </tbody>\n  </table>\n</template>\n"],"names":["toRef","props","members","question","grades","reactive"],"mappings":"o4BAmBqBA,EAAMC,EAAO,cAAc,EAC1C,MAAAC,EAAUF,EAAMC,EAAO,SAAS,EAChCE,EAAWH,EAAMC,EAAO,UAAU,EAUlCG,EAASC,EAAS,CAAA,CAAE;;;;;;;;;;;;;;;;;;"}