{"version":3,"file":"RubricEvaluation.js","sources":["../../../../vue-ts-ipeer/src/student/views/questions/PeerRubricGeneralCommentQuestion.vue","../../../../vue-ts-ipeer/src/student/views/templates/RubricEvaluation.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { ref, reactive, watch, computed, onMounted } from 'vue';\n\nimport type { User, RubricsCriteria, ResponseData } from '@/types/typings'\n// REFERENCES\nconst emit = defineEmits<{\n  // (e: 'update:modelValue', option: string): void\n}>()\nconst props = defineProps<{\n  members: User[]\n  form: ResponseData\n  index: string | number\n}>()\n\n// DATA\nconst settings = reactive({\n  question: {\n    title: 'Please provide overall comments about each peer.',\n    description: 'question description'\n  }\n})\n// COMPUTED\n\n// METHODS\n\n// WATCH\n\n// LIFECYCLE\n\n</script>\n\n<template>\n  <div class=\"datatable\">\n    <div v-if=\"settings.question.title\" class=\"question\">{{ props.index }}. {{ settings.question.title }}</div>\n    <div v-if=\"settings.question.description\" class=\"description\">Please provide overall comments about each peer.</div>\n    <div class=\"hidden\">PeerRubricGeneralCommentQuestion</div>\n\n    <div class=\"flex flex-col\" v-for=\"(member, memberIdx) of props.members\" :key=\"member.id\">\n      <textarea class=\"flex-1\" :name=\"'data['+ member.id +'][gen_comment]'\" v-model=\"props.form[memberIdx]['comment']\"></textarea>\n    </div>\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport { ref, toRef, unref, reactive, watch, computed, onMounted } from 'vue';\nimport { useRoute } from 'vue-router'\nimport {find, map} from 'lodash'\n\nimport {  } from \"yup\";\nimport Debugger from \"@/components/Debugger.vue\";\n\nimport EvaluationForm from '@/student/views/EvaluationForm.vue'\nimport PeerRubricLikertQuestion from '@/student/views/questions/PeerRubricLikertQuestion.vue'\nimport PeerRubricCommentQuestion from '@/student/views/questions/PeerRubricCommentQuestion.vue'\nimport PeerRubricGeneralCommentQuestion from '@/student/views/questions/PeerRubricGeneralCommentQuestion.vue'\n\n// import InputElement from '@/components/fields/experimental/InputElement.vue'\nimport InputElement from '@/components/fields/InputElement.vue'\n\nimport type { User, Evaluation, RubricResponse } from '@/types/typings'\nimport UserCard from \"@/student/components/UserCard.vue\";\n\n// REFERENCES\nconst emit = defineEmits<{\n  // (e: 'update:modelValue', option: string): void\n}>()\nconst props = defineProps<{\n  action: string\n  _method: string\n  currentUser: User\n  evaluation: Evaluation\n}>()\nconst route = useRoute()\n\n// DATA\nconst evaluation = toRef(props, 'evaluation')\nconst params = reactive<any>({\n  event_id: computed<string | number>(() => evaluation.value?.id),\n  group_id: computed<string | number>(() => evaluation.value?.group?.id),\n  course_id: computed<string | number>(() => evaluation.value?.course?.id),\n  group_event_id: computed<string | number>(() => evaluation.value?.group_event_id),\n  rubric_id: computed(() => evaluation.value?.rubric_id),\n  user_id: computed<string | number>(() => props.currentUser?.id),\n  evaluatee_count: computed<string | number>(() => evaluation.value?.members?.length),\n})\nconst form = computed<RubricResponse>(() => {\n  if(evaluation.value?.review?.response && Object.keys(evaluation.value?.review?.response).length) {\n    return unref(props.evaluation?.review?.response)\n  }\n  return {}\n})\n// COMPUTED\n\n// METHODS\n\n// WATCH\n\n// LIFECYCLE\n\n</script>\n\n<template>\n  <EvaluationForm ref=\"evaluation_form\" :currentUser=\"currentUser\" :evaluation=\"evaluation\" :form=\"form\" :data=\"'props.evaluation'\">\n    <template v-slot:header>\n      <InputElement type=\"hidden\" name=\"action\" :value=\"props.action\" />\n      <InputElement type=\"hidden\" name=\"_method\" :value=\"props._method\" />\n\n      <input type=\"hidden\" name=\"event_id\" :value=\"params?.event_id\" />\n      <input type=\"hidden\" name=\"group_id\" :value=\"params?.group_id\" />\n      <input type=\"hidden\" name=\"course_id\" :value=\"params?.course_id\" />\n      <input type=\"hidden\" name=\"grp_event_id\" :value=\"params?.group_event_id\" />\n      <input type=\"hidden\" name=\"rubric_id\" :value=\"params?.rubric_id\" />\n      <input type=\"hidden\" name=\"data[Evaluation][submitter_id]\" :value=\"params?.user_id\" />\n      <input type=\"hidden\" name=\"evaluateeCount\" :value=\"params?.evaluatee_count\" />\n    </template>\n    <!--\n    <InputElement type=\"hidden\" name=\"event_id\" :value=\"params?.event_id\" />\n    <InputElement type=\"hidden\" name=\"group_id\" :value=\"params?.group_id\" />\n    <InputElement type=\"hidden\" name=\"course_id\" :value=\"params?.course_id\" />\n    <InputElement type=\"hidden\" name=\"data[Evaluation][evaluator_id]\" :value=\"params?.user_id\" />\n    <InputElement type=\"hidden\" name=\"evaluateeCount\" :value=\"params?.evaluatee_count\" />\n    <InputElement type=\"hidden\" name=\"memberIDs\" :value=\"params?.member_ids\" />-->\n\n    <template v-slot:main>\n      <Debugger title=\"RubricEvaluationTemplate\" :state=\"props.currentUser\" :form=\"form.data\" :data=\"props.evaluation\" />\n\n      <div class=\"datatable\"\n           v-for=\"(rubric_criteria, criteriaIdx) of props.evaluation?.review?.data?.rubrics_criteria\" :key=\"rubric_criteria.id\">\n        <div v-if=\"rubric_criteria.criteria\" class=\"question\">{{ rubric_criteria.id }}. {{ rubric_criteria.criteria }}</div>\n        <div class=\"description text-sm text-slate-700 mx-4 mb-2\"></div>\n\n\n\n      </div>\n\n      <PeerRubricGeneralCommentQuestion\n          :members=\"props.evaluation?.members\"\n          :form=\"form.data\"\n          :index=\"props.evaluation?.review?.data?.rubrics_criteria?.length+1\"\n      />\n\n      <!--\n      <div class=\"datatable rubrics_criteria\" v-for=\"(rubrics_criteria, criteriaIdx) of props.evaluation?.review?.data?.rubrics_criteria\" :key=\"criteriaIdx\">\n\n        <div v-if=\"rubrics_criteria.criteria\" class=\"question\">{{ rubrics_criteria.criteria_num }}. {{ rubrics_criteria.criteria }}</div>\n        <div v-if=\"rubrics_criteria?.description\" class=\"question\">{{ rubrics_criteria?.description }}</div>\n\n        <table class=\"standardtable leftalignedtable\">\n          <thead>\n          <tr>\n            <th style=\"width: 20%; text-align: center;\">\n              <div class=\"flex flex-col space-y-1\">\n                <div class=\"text-slate-900 text-sm leading-3\">Peer</div>\n                <div class=\"text-slate-900 text-sm text-slate-700\" v-if=\"parseInt(rubrics_criteria.show_marks)\">({{ rubrics_criteria.multiplier }} marks)</div>\n              </div>\n            </th>\n            <th v-for=\"(criteria_comment, criteria_commentIdx) of rubrics_criteria.rubrics_criteria_comment\" :key=\"criteria_commentIdx\">\n              <div class=\"text-center\">\n                <div class=\"text-slate-900 text-sm font-semibold\">{{ find(props.evaluation?.review?.data?.rubrics_lom, lom => lom.id === criteria_comment.rubrics_loms_id ).lom_comment }}</div>\n                <div class=\"text-slate-700 text-xs\">{{ criteria_comment.criteria_comment }}</div>\n              </div>\n            </th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr v-for=\"(member, memberIdx) of props.evaluation?.members\" :key=\"member.id\">\n            <td><UserCard :member=\"member\" /></td>\n            <td v-for=\"(lom, lomIdx) of props.evaluation?.review?.data?.rubrics_lom\" :key=\"lomIdx\">\n              <div class=\"flex flex-col text-xs \">\n                <input type=\"radio\" :name=\"`${rubrics_criteria.id}_${memberIdx}_${lom.id}`\" value=\"\" />\n              </div>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n\n      </div>-->\n\n      <!--\n      <div class=\"datatable rubrics_general_comments\">\n\n        <div class=\"question\">{{ props.evaluation?.review?.data?.rubrics_criteria.length+1 }}. {{ 'Please provide overall comments about each peer.' }}</div>\n        <div class=\"question text-sm mx-4 mb-2\">{{ 'rubrics criteria:: general comments - description' }}</div>\n\n        <table class=\"standardtable leftalignedtable\">\n          <thead>\n          <tr>\n            <th style=\"width: 20%; text-align: center;\">\n              <div class=\"flex flex-col space-y-1\">\n                <div class=\"text-slate-900 text-sm leading-3\">Peer</div>\n                <div class=\"text-slate-900 text-sm text-slate-700\"></div>\n              </div>\n            </th>\n            <th>\n              <div class=\"text-center\">\n                <div class=\"text-slate-900 text-sm font-semibold\">Comments</div>\n                <div class=\"text-slate-700 text-xs\"></div>\n              </div>\n            </th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr v-for=\"(member, memberIdx) of props.evaluation?.members\" :key=\"member.id\">\n            <td><UserCard :member=\"member\" /></td>\n            <td>\n              <div class=\"flex flex-col text-xs \">\n                <textarea :value=\"form.data[memberIdx]['comment']\"></textarea>\n              </div>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n\n      </div>-->\n\n    </template>\n\n    <template v-slot:footer>\n      <TakeNote />\n    </template>\n\n    <template v-slot:action=\"{ onSave }\">\n      <slot name=\"cta\" :on-save=\"onSave\"></slot>\n    </template>\n\n  </EvaluationForm>\n</template>\n"],"names":["settings","reactive","useRoute","evaluation","toRef","props","params","computed","_a","_b","form","_d","_c","unref","_f","_e"],"mappings":"wsBAeMA,EAAWC,EAAS,CACxB,SAAU,CACR,MAAO,mDACP,YAAa,sBACf,CAAA,CACD,8+BCSaC,EAAS,EAGjB,MAAAC,EAAaC,EAAMC,EAAO,YAAY,EACtCC,EAASL,EAAc,CAC3B,SAAUM,EAA0B,IAAA,OAAM,OAAAC,EAAAL,EAAW,QAAX,YAAAK,EAAkB,GAAE,EAC9D,SAAUD,EAA0B,IAAM,SAAA,OAAAE,GAAAD,EAAAL,EAAW,QAAX,YAAAK,EAAkB,QAAlB,YAAAC,EAAyB,GAAE,EACrE,UAAWF,EAA0B,IAAM,SAAA,OAAAE,GAAAD,EAAAL,EAAW,QAAX,YAAAK,EAAkB,SAAlB,YAAAC,EAA0B,GAAE,EACvE,eAAgBF,EAA0B,IAAA,OAAM,OAAAC,EAAAL,EAAW,QAAX,YAAAK,EAAkB,eAAc,EAChF,UAAWD,EAAS,IAAA,OAAM,OAAAC,EAAAL,EAAW,QAAX,YAAAK,EAAkB,UAAS,EACrD,QAASD,EAA0B,IAAA,OAAM,OAAAC,EAAAH,EAAM,cAAN,YAAAG,EAAmB,GAAE,EAC9D,gBAAiBD,EAA0B,IAAM,SAAA,OAAAE,GAAAD,EAAAL,EAAW,QAAX,YAAAK,EAAkB,UAAlB,YAAAC,EAA2B,OAAM,CAAA,CACnF,EACKC,EAAOH,EAAyB,IAAM,iBACvC,QAAAE,GAAAD,EAAAL,EAAW,QAAX,YAAAK,EAAkB,SAAlB,YAAAC,EAA0B,WAAY,OAAO,MAAKE,GAAAC,EAAAT,EAAW,QAAX,YAAAS,EAAkB,SAAlB,YAAAD,EAA0B,QAAQ,EAAE,OAChFE,GAAMC,GAAAC,EAAAV,EAAM,aAAN,YAAAU,EAAkB,SAAlB,YAAAD,EAA0B,QAAQ,EAE1C,EAAC,CACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}