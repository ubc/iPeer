{"version":3,"file":"SimpleEvaluation.js","sources":["../../../../vue-ts-ipeer/src/components/icons/IconNotebook.vue","../../../../vue-ts-ipeer/src/components/icons/IconSmilingUser.vue","../../../../vue-ts-ipeer/src/components/fields/experimental/InputRangeElement.vue","../../../../vue-ts-ipeer/src/student/views/questions/PeerSimpleRangeQuestion.vue","../../../../vue-ts-ipeer/src/components/fields/experimental/TextElement.vue","../../../../vue-ts-ipeer/src/student/views/templates/SimpleEvaluation.vue"],"sourcesContent":["<template>\n  <svg id=\"emoji\" viewBox=\"0 0 72 72\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g id=\"line\">\n      <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M11,16.9092l4.9985-5h43.003c0.5514,0,0.9985,0.447,0.9985,0.9985v43.003c0,0.5514-0.447,0.9985-0.9985,0.9985\"/>\n      <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M55.0015,60.9092h-43.003c-0.5514,0-0.9985-0.447-0.9985-0.9985v-43.003c0-0.5514,0.447-0.9985,0.9985-0.9985h43.003 c0.5514,0,0.9985,0.447,0.9985,0.9985v43.003C56,60.4621,55.553,60.9092,55.0015,60.9092z\"/>\n      <polyline fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" points=\"47.3583,29.7985 43.3583,29.7985 43.3583,36.7985 47.3583,36.7985\"/>\n      <line x1=\"43.3583\" x2=\"46.3583\" y1=\"33.2985\" y2=\"33.2985\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <polyline fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" points=\"19.6417,36.7985 19.6417,29.7985 24.6417,36.7985 24.6417,29.7985\"/>\n      <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" d=\"M30.8583,36.7985L30.8583,36.7985c-1.3807,0-2.5-1.1193-2.5-2.5v-2c0-1.3807,1.1193-2.5,2.5-2.5l0,0c1.3807,0,2.5,1.1193,2.5,2.5 v2C33.3583,35.6792,32.239,36.7985,30.8583,36.7985z\"/>\n      <line x1=\"36.3583\" x2=\"40.3583\" y1=\"29.8286\" y2=\"29.8286\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n      <line x1=\"38.3583\" x2=\"38.3583\" y1=\"29.8286\" y2=\"36.8286\" fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\n    </g>\n  </svg>\n</template>","<template>\n  <svg id=\"emoji\" viewBox=\"0 0 72 72\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g id=\"line\">\n      <g>\n        <path fill=\"none\" stroke=\"#000000\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M36,45c-5.9,0-11-6-11-14c0-3.3,1-7.4,3-10 c0.3-0.3,0.5-0.6,0.8-0.9c2-1.8,4.5-2.8,7.2-2.8l0,0c2.7,0,5.2,1,7.2,2.8c0.3,0.3,0.6,0.6,0.8,0.9c2,2.6,3,6.7,3,10 C47,39,41.9,45,36,45\"/>\n        <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17,59.9v-3c0-5,5-9,10-9 c6,5,12,5,18,0c5,0,10,4,10,9v3\"/>\n        <path d=\"M42,29.9c0,1.1-0.9,2-2,2s-2-0.9-2-2s0.9-2,2-2S42,28.8,42,29.9\"/>\n        <path d=\"M34,29.9c0,1.1-0.9,2-2,2c-1.1,0-2-0.9-2-2s0.9-2,2-2C33.1,27.9,34,28.8,34,29.9\"/>\n        <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M33,38.1c1.9,1,4.1,1,6,0\"/>\n      </g>\n    </g>\n  </svg>\n</template>","<script setup lang=\"ts\">\nimport { toRef } from 'vue'\nimport { useField } from 'vee-validate'\n\nconst props = defineProps<{\n  type?: string | 'text'\n  value?: string | ''\n  name?: string\n  label?: string,\n  placeholder?: string | ''\n  disabled?: boolean | false\n}>();\n\nconst name = toRef(props, 'name');\n\nconst { value: inputValue, errorMessage, handleBlur, handleChange, meta } = useField(name, undefined, {\n  initialValue: props.value,\n});\n</script>\n\n<template>\n  <div class=\"form-group\" :class=\"{ 'has-error': !!errorMessage, success: meta.valid }\">\n    <label v-if=\"label\" class=\"form-label\" :for=\"name\">{{ label }}</label>\n    <div class=\"form-control flex flex-col\">\n      <input class=\"form-input-range flex-1\"\n             :name=\"name\"\n             :min=\"0\"\n             :max=\"100\"\n             :id=\"name\"\n             :type=\"type\"\n             :value=\"inputValue\"\n             :placeholder=\"placeholder\"\n             @input=\"handleChange\"\n             @blur=\"handleBlur\"\n             :disabled=\"disabled\"\n      />\n      <span :class=\"`hidden form--text text-xs ${meta.dirty ? 'text-red-500' : 'text-green-500'} text-muted`\">{{ meta }}</span>\n      <span class=\"form-text text-muted\" v-show=\"errorMessage || meta.valid\">{{ errorMessage }}</span>\n    </div>\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport {ref, reactive, watch, computed, onMounted, toRef, onBeforeMount} from 'vue';\n\nimport UserCard from \"@/student/components/UserCard.vue\";\nimport InputRangeElement from '@/components/fields/experimental/InputRangeElement.vue'\nimport {findIndex, forEach, map, reduce} from \"lodash\";\n\n// REFERENCES\nconst emit = defineEmits<{\n  // (e: 'updateModelValue', option: string): void\n}>()\nconst props = defineProps<{\n  members: object[]\n  form: object\n  name: string\n  label?: string\n  question?: string\n  description?: string\n  placeholder?: string\n  disabled?: boolean | false\n}>();\n\n// DATA\nconst form = toRef(props, 'form')\n\nconst total_points = ref(props.evaluation?.review?.remaining ?? props.members.length * 100)\n\nconst student_slider = ref([])\nconst slider_sum = ref(0)\n\nconst student_scores = ref([])\n\n// COMPUTED\n\n// WATCH\n\nconst theSumThingDelete = ref(0);\n\nfunction distributeDecimalRemainder() {\n\n  const studentScoreSum = reduce(student_scores.value, (acc, val) => acc += val, 0);\n  const remainder = total_points.value - studentScoreSum\n\n  const lowestScore = remainder > 0 ? Math.min(...student_scores.value) : Math.max(...student_scores.value)\n  const memberIdx = findIndex(student_scores.value, (val) => val === lowestScore)\n\n  student_scores.value[memberIdx] += remainder\n\n  console.log({remainder})\n}\n\n// METHODS\nfunction updateStudentSlider(event) {\n  const {target, key, value} = event;\n\n  const oldValue = student_slider.value[key]\n  slider_sum.value += parseInt(value) - oldValue\n\n  if (slider_sum.value <= 0){\n    student_scores.value = map(student_scores.value, () => total_points.value / student_scores.value.length)\n  } else {\n    student_slider.value[key] = parseInt(value);\n    student_scores.value = map(student_slider.value, (sliderValue) => Math.round(total_points.value * sliderValue / slider_sum.value))\n  }\n\n\n  distributeDecimalRemainder()\n\n  theSumThingDelete.value = reduce(student_scores.value, (acc, val) => acc += val, 0)\n\n  form.value.points = student_scores.value\n}\n\n\n// LIFECYCLE\n\nonBeforeMount(() => {\n  if (props.form?.points?.length) {\n    student_scores.value = [...props.form.points]\n    student_slider.value = map(props.form.points, (val, index) => {\n      const studentScoreValue = parseInt(val)\n      const studentPercentValue = studentScoreValue / total_points.value\n      const defaultStudentSliderValue = 100 * studentPercentValue\n      slider_sum.value += defaultStudentSliderValue;\n      return defaultStudentSliderValue\n    })\n  } else {\n    const defaultStudentSliderValue = Math.round(total_points.value / props.members.length)\n    student_slider.value = map(props.members, () => defaultStudentSliderValue)\n    slider_sum.value = defaultStudentSliderValue * props.members?.length\n    student_scores.value = map(props.members, () => total_points.value / props.members.length)\n  }\n\n  theSumThingDelete.value = reduce(student_scores.value, (acc, val) => acc += parseInt(val), 0)\n})\n</script>\n\n<template>\n\n  <div class=\"text-xs text-red-500\">total_points: {{ total_points }}</div>\n  <div class=\"text-xs text-red-500\">slider_sum: {{ slider_sum }}</div>\n  <div class=\"text-xs text-red-500\">student_slider: {{ student_slider }}</div>\n  <div class=\"text-xs text-red-500\">student_scores: {{ student_scores }}</div>\n  <div class=\"text-xs text-red-500\">theSumThingDelete: {{ theSumThingDelete }}</div>\n\n\n  <div class=\"datatable\">\n    <div v-if=\"props.question\" class=\"question\">{{ props.question }}</div>\n    <div v-if=\"props.description\" class=\"description text-sm mx-4 mb-2\">{{ props.description }}</div>\n    <table class=\"standardtable\">\n      <thead>\n      <tr>\n        <th><div class=\"\">Peer</div></th>\n        <th><div class=\"\">Relative Contribution</div></th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"(member, memberIdx) of props.members\" :key=\"member.id\">\n\n        <td style=\"width: 20%\"><UserCard :member=\"member\" /></td>\n        <td style=\"width: 80%\">\n          <div class=\"slider-wrapper flex flex-col py-1 mx-2\">\n            <div class=\"amount text-sm text-slate-700 leading-3 mb-4\">A fair<br/>amount</div>\n            <div class=\"tick text-slate-500\"></div>\n            <input type=\"hidden\" :name=\"`${name}[${memberIdx}]`\" :value=\"props.form[name][memberIdx]\" />\n<!--            <input type=\"text\"  value=\"\" />-->\n            <InputRangeElement\n                type=\"range\"\n                :label=\"label\"\n                :value=\"student_slider[memberIdx]\"\n                :name=\"`test[${memberIdx}]`\"\n                :placeholder=\"placeholder\"\n                :disabled=\"props.disabled\"\n                @input=\"updateStudentSlider({target:name, key:memberIdx, value: $event.target.value})\"\n            />\n<!--                :name=\"`${name}[${memberIdx}]`\"-->\n<!--                :name=\"student_slider[memberIdx]\"-->\n\n            <div class=\"controls flex justify-between items-center\">\n              <div class=\"text-sm text-slate-700 leading-3\">Less</div>\n              <div class=\"text-sm text-slate-700 leading-3\">More</div>\n            </div>\n\n            <div class=\"temp\">\n              <div class=\"text-xs text-red-700\">{{ props.form[name][memberIdx] }}</div>\n            </div>\n          </div>\n\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { ref, toRef, onBeforeUnmount, onMounted } from 'vue'\nimport autosize from 'autosize'\nimport { useField } from 'vee-validate'\n\nconst props = defineProps<{\n  label: string\n  value?: string\n  name: string\n  placeholder?: string\n  disabled?: boolean | false\n}>();\n\nconst name = toRef(props, 'name');\nconst element = ref()\n\nconst { value: inputValue, errorMessage, handleBlur, handleChange, meta } = useField(name, undefined, {\n  initialValue: props.value,\n});\n\nonMounted(() => autosize(element.value))\nonBeforeUnmount(() => autosize.destroy(element.value))\n\n</script>\n\n<template>\n  <div class=\"flex flex-col\" :class=\"{ 'has-error': !!errorMessage, success: meta.valid }\">\n    <label v-if=\"props.label\" :for=\"name\" class=\"text-sm text-left\">{{ props.label }}</label>\n    <div v-if=\"disabled\" class=\"quote text-sm text-left\" v-html=\"inputValue\"></div>\n    <textarea v-else\n        ref=\"element\"\n        class=\"block appearance-none bg-white px-2 py-2 pr-8 leading-tight\"\n        :class=\"disabled ? 'border-none bg-transparent' : 'border border-gray-400 hover:border-gray-500 rounded shadow focus:outline-none focus:shadow-outline'\"\n        :name=\"name\"\n        :id=\"name\"\n        :value=\"inputValue\"\n        :disabled=\"disabled\"\n        :placeholder=\"placeholder\"\n        @input=\"handleChange\"\n        @blur=\"handleBlur\"\n    ></textarea>\n    <span class=\"help-message\" v-show=\"errorMessage || meta.valid\">{{ errorMessage }}</span>\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport { ref, unref, toRef, reactive, watch, computed, onMounted } from 'vue';\nimport { useRoute } from 'vue-router'\nimport { useForm } from 'vee-validate'\nimport { map } from 'lodash'\n\nimport EvaluationForm from '@/student/views/EvaluationForm.vue'\nimport PeerSimpleRangeQuestion from '@/student/views/questions/PeerSimpleRangeQuestion.vue'\nimport PeerSimpleCommentQuestion from '@/student/views/questions/PeerSimpleCommentQuestion.vue'\n\n\n// import PeerRangeQuestion from \"@/student/views/questions/PeerRangeQuestion.vue\";\n// import PeerCommentQuestion from \"@/student/views/questions/PeerCommentQuestion.vue\";\nimport InputElement from '@/components/fields/InputElement.vue'\nimport VFormInput from '@/components/fields/VFormInput.vue'\nimport VFormText from '@/components/fields/VFormText.vue'\nimport TakeNote from \"@/student/components/TakeNote.vue\";\n\n\nimport type { Evaluation, User } from '@/types/typings'\ninterface SimpleEvaluation {\n  id: string\n  submitter_id: string\n  submitted: string\n  date_submitted: string\n  points: string[]\n  comments: string[]\n}\ninterface Form {\n  points: string[]\n  comments: string[]\n}\n// REFERENCES\nconst emit = defineEmits<{\n  // (e: 'update:modelValue', option: string): void\n  // (e: 'update:comments', option: string): void\n}>()\nconst props = defineProps<{\n  action: string\n  _method: string\n  currentUser: User\n  evaluation: Evaluation\n}>()\nconst route = useRoute()\n\n// DATA\nconst settings = reactive({\n  questions: [\n    {\n      id: '1',\n      title: 'Please rate each peer\\'s relative contribution.',\n      description: 'points:: some description'\n    },\n    {\n      id: '2',\n      title: 'Please provide overall comments about each peer.',\n      description: 'comments:: some description'\n    }\n  ]\n})\nconst evaluation = toRef(props, 'evaluation')\nconst params = reactive<any>({\n  event_id: computed<string | number>(() => evaluation.value?.id),\n  group_id: computed<string | number>(() => evaluation.value?.group?.id),\n  course_id: computed<string | number>(() => evaluation.value?.course?.id),\n  user_id: computed<string | number>(() => props.currentUser?.id),\n  evaluatee_count: computed<string | number>(() => evaluation.value?.members?.length),\n  member_ids: computed<string | number>(() => map(evaluation.value?.members, member => member.id)),\n})\nconst form2 = computed<SimpleEvaluation>(() => {\n  if(evaluation.value?.review?.response.length) {\n    return evaluation.value?.review?.response\n  } else {\n    return {\n      points: [],\n      comments: []\n    }\n  }\n})\n\nconst form = computed<SimpleEvaluation>(() => {\n  if(evaluation.value?.review?.response && Object.keys(evaluation.value?.review?.response).length) {\n    return unref(props.evaluation?.review?.response)\n  }\n  return {\n    points: [],\n    comments: []\n  }\n})\n\n// const form = toRef<any>(props, 'response')\nconst { handleSubmit, errors, values } = useForm({\n  initialValues: form.value\n})\n\n// COMPUTED\nconst response = computed(() => props.evaluation?.review?.response)\n\nconst isDisabled = computed(() => {\n  if(route.path === 'submissions') {\n    return true\n  }\n  return false\n  // return new Date().toLocaleDateString('en-CA', {}) >= new Date(props.evaluation?.due_date).toLocaleDateString('en-CA', {})\n})\n// METHODS\n\n// function onInvalidSubmit({ values, errors, results }: any) {\n//   console.log(values); // current form values\n//   console.log(errors); // a map of field names and their first error message\n//   console.log(results); // a detailed map of field names and their validation results\n// }\n\n// const onChange = handleChange(values => {\n//   alert(JSON.stringify(values, null, 2))\n// })\n\n\n\n// function updateSliderPoints({target, key, value}) {\n//   // console.log(student_scores.value, target, key, value)\n//\n//   student_slider.value[key] = parseInt(value)\n//   slider_sum.value += value - student_slider.value[key]\n//\n//   // student_scores.value.push(value)\n// }\n\n\n\n// WATCH\n\n// LIFECYCLE\n\n</script>\n\n<template>\n  <EvaluationForm ref=\"evaluation_form\" :currentUser=\"currentUser\" :evaluation=\"evaluation\" :form=\"form\">\n    <template v-slot:header>\n      <InputElement type=\"hidden\" name=\"action\" :value=\"props.action\" />\n      <InputElement type=\"hidden\" name=\"_method\" :value=\"props._method\" />\n\n      <InputElement type=\"hidden\" name=\"event_id\" :value=\"params?.event_id\" />\n      <InputElement type=\"hidden\" name=\"group_id\" :value=\"params?.group_id\" />\n      <InputElement type=\"hidden\" name=\"course_id\" :value=\"params?.course_id\" />\n      <InputElement type=\"hidden\" name=\"data[Evaluation][evaluator_id]\" :value=\"params?.user_id\" />\n      <InputElement type=\"hidden\" name=\"evaluateeCount\" :value=\"params?.evaluatee_count\" />\n      <InputElement type=\"hidden\" name=\"memberIDs\" :value=\"params?.member_ids\" />\n    </template>\n\n    <!--<template v-slot:main=\"{ params, form }\">-->\n    <template v-slot:main>\n\n      <PeerSimpleRangeQuestion\n          :members=\"props.evaluation?.members\"\n          :form=\"values\"\n          :name=\"`points`\"\n          question=\"1. Please rate each peer's relative contribution.\"\n          description=\"just a points section description\"\n          :disabled=\"isDisabled\"\n      />\n      <div class=\"temp text-left\">\n<!--        <div class=\"text-xs text-red-500\">total_points: {{ total_points }}</div>-->\n<!--        <div class=\"text-xs text-red-500\">slider_sum: {{ slider_sum }}</div>-->\n<!--        <div class=\"text-xs text-red-500\">student_slider: {{ student_slider }}</div>-->\n<!--        <div class=\"text-xs text-red-500\">student_scores: {{ student_scores }}</div>-->\n        <div class=\"text-xs text-blue-500\">remaining: {{ props.evaluation?.review?.remaining }}</div>\n        <div class=\"text-xs text-blue-500\">form.points: {{ form.points }}</div>\n        <div class=\"text-xs text-blue-500\">values.points: {{ values.points }}</div>\n      </div>\n\n\n      <PeerSimpleCommentQuestion\n          :members=\"props.evaluation?.members\"\n          :form=\"form\"\n          :name=\"`comments`\"\n          question=\"2. Please provide overall comments about each peer.\"\n          description=\"just a comments section description\"\n          :disabled=\"isDisabled\"\n      />\n      <div class=\"text-xs text-left text-blue-500 py-2 px-4\" v-for=\"(comment, idx) of values.comments\" :key=\"idx\">{{ comment }}</div>\n\n    </template>\n\n    <template v-slot:footer>\n      <TakeNote />\n    </template>\n\n    <template v-slot:action=\"{ onSave }\">\n      <slot name=\"cta\" :on-save=\"onSave\"></slot>\n    </template>\n\n  </EvaluationForm>\n</template>\n\n\n\n\n\n<!--<template>-->\n<!--  <div class=\"simple-valuation-template\">-->\n    <!--\n    <EvaluationForm\n        :params=\"params\"\n        :form=\"form\"\n        :currentUser=\"props.currentUser\"\n        :evaluation=\"props.evaluation\"\n    >-->\n<!--      // PARAMS GOES HERE-->\n<!--      <pre class=\"text-xs text-gray-500\">&#45;&#45;{{ form }}&#45;&#45;</pre>-->\n  <!--\n  <PeerRangeQuestion\n      question=\"1. Please rate each peer's relative contribution.\"\n      title=\"Relative Contribution\"\n      :members=\"props.evaluation?.members\"\n      :name=\"''\"\n      :form=\"form\"\n      :remaining=\"props.evaluation?.review?.remaining\"\n      :min=\"0\"\n      :max=\"100\"\n      :disabled=\"isDisabled\"\n      />-->\n\n    <!--\n    </EvaluationForm>-->\n<!--  </div>-->\n<!--</template>-->\n"],"names":["_hoisted_1","_hoisted_3","_sfc_render","_ctx","_cache","name","toRef","props","inputValue","errorMessage","handleBlur","handleChange","meta","useField","form","total_points","ref","_c","_b","_a","student_slider","slider_sum","student_scores","theSumThingDelete","distributeDecimalRemainder","studentScoreSum","reduce","acc","val","remainder","lowestScore","memberIdx","findIndex","updateStudentSlider","event","target","key","value","oldValue","map","sliderValue","onBeforeMount","index","studentPercentValue","defaultStudentSliderValue","element","onMounted","autosize","onBeforeUnmount","route","useRoute","reactive","evaluation","params","computed","member","_d","unref","_f","_e","handleSubmit","errors","values","useForm","isDisabled"],"mappings":"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"}