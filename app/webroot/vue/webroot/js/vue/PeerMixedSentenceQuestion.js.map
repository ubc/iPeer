{"version":3,"file":"PeerMixedSentenceQuestion.js","sources":["../../../../vue-ts-ipeer/src/student/views/questions/PeerMixedSentenceQuestion.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { ref, toRef, reactive, watch, computed, onMounted } from 'vue'\nimport { FieldArray } from 'vee-validate'\nimport { validateSentence } from '@/helpers/rules'\nimport CustomVeeField from '@/components/fields/CustomVeeField.vue'\n\n\nimport UserCard from '@/student/components/UserCard.vue'\nimport { InputText } from '@/components/fields'\n\n// REFERENCES\nconst emit = defineEmits<{\n  (e: 'update:form', value: object): void\n}>()\nconst props = defineProps<{\n  question: object,\n  members: object[],\n  initialState: object,\n}>()\n\n// DATA\nconst members = toRef(props, 'members')\nconst question = toRef(props, 'question')\nconst initialState = toRef(props, 'initialState')\n// COMPUTED\n// METHODS\n// WATCH\n// LIFECYCLE\n</script>\n\n<template>\n  <FieldArray name=\"data\">\n  <table class=\"standardtable leftalignedtable\">\n    <thead>\n    <tr>\n      <th style=\"width: 20%\">\n        <div class=\"\" style=\"text-align: center\">\n          <div class=\"\" style=\"font-weight: 400;\">Peer</div>\n          <small class=\"\" style=\"font-size: 0.875rem; font-weight: 300;\"></small>\n        </div>\n      </th>\n      <th :style=\"'width: 80%; text-align: center'\">\n        <div class=\"\" style=\"font-weight: 400;\">Comments</div>\n        <small class=\"\" style=\"font-size: 0.875rem; font-weight: 300;\"></small>\n      </th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr v-for=\"member of members\" :key=\"member.id\">\n      <td><UserCard :member=\"member\" /></td>\n      <td>\n        <CustomVeeField\n            as=\"input\"\n            :name=\"`data[${member.id}][EvaluationMixeval][${question.question_num}][question_comment]`\"\n            :rules=\"validateSentence\"\n        />\n        <!--\n        <InputText class=\"w-full\"\n            :name=\"`data[${member.id}][EvaluationMixeval][${question.question_num}][question_comment]`\"\n            :value=\"''\"\n        />-->\n      </td>\n      <!--  v-model=\"initialState['comment_'+member.id+'_'+question.question_num]\"  -->\n    </tr>\n    </tbody>\n  </table>\n  </FieldArray>\n</template>\n"],"names":["members","toRef","props","question"],"mappings":"ogCAqBMA,EAAUC,EAAMC,EAAO,SAAS,EAChCC,EAAWF,EAAMC,EAAO,UAAU,EACnB,OAAAD,EAAMC,EAAO,cAAc;;;;"}